[
  {
    "prefix": "addEventListener",
    "complete": "addEventListener(|, )"
  },
  {
    "prefix": "alert",
    "complete": "alert(|);"
  },
  {
    "prefix": ".appendChild",
    "complete": ".appendChild(|)"
  },
  {
    "prefix": "break",
    "complete": "break;"
  },
  {
    "prefix": ".className",
    "complete": ".className"
  },
  {
    "prefix": ".classList",
    "complete": ".classList"
  },
  {
    "prefix": "classList.add",
    "complete": "classList.add(|)"
  },
  {
    "prefix": "classList.remove",
    "complete": "classList.remove(|)"
  },
  {
    "prefix": "clearInterval",
    "complete": "clearInterval(|)"
  },
  {
    "prefix": "clearTimeout",
    "complete": "clearTimeout(|)"
  },
  {
    "prefix": "confirm",
    "complete": "confirm(^|);"
  },
  {
    "prefix": "console.log",
    "complete": "console.log(^|);"
  },
  {
    "prefix": "const",
    "complete": "const "
  },
  {
    "prefix": ".createElement",
    "complete": ".createElement(|)"
  },
  {
    "prefix": "do",
    "complete": "do {\n\t|\n} while ();"
  },
  {
    "prefix": "document",
    "complete": "document."
  },
  {
    "prefix": "document.querySelector",
    "complete": "document.querySelector(^|)"
  },
  {
    "prefix": "document.querySelectorAll",
    "complete": "document.querySelectorAll(^|)"
  },
  {
    "prefix": "document.getElementById",
    "complete": "document.getElementById(^|)"
  },
  {
    "prefix": "document.getElementsByClassName",
    "complete": "document.getElementsByClassName(^|)"
  },
  {
    "prefix": "else",
    "complete": "else {\n\t|^\n}"
  },
  {
    "prefix": "else if",
    "complete": "else if (|^) {\n\t\n}"
  },
  {
    "prefix": "function",
    "complete": "function ^|() {\n}"
  },
  {
    "prefix": "for",
    "complete": "for (|;;) {\n  ^\n}"
  },
  {
    "prefix": ".forEach",
    "complete": ".forEach(^|)"
  },
  {
    "prefix": ".getAttribute",
    "complete": ".getAttribute(\"|\")"
  },
  {
    "prefix": "if",
    "complete": "if (|^) {\n\t}"
  },
  {
    "prefix": "if",
    "complete": "if (|^) {\n\t} else {\n\t}"
  },
  {
    "prefix": "if",
    "complete": "if (|^) {\n\t} else if () {\n\t}"
  },
  {
    "prefix": ".innerHTML",
    "complete": ".innerHTML"
  },
  {
    "prefix": "let",
    "complete": "let "
  },
  {
    "prefix": ".length",
    "complete": ".length"
  },
  {
    "prefix": ".onclick",
    "complete": ".onclick = "
  },
  {
    "prefix": ".onkeydown",
    "complete": ".onkeydown = "
  },
  {
    "prefix": ".onkeyup",
    "complete": ".onkeyup = "
  },
  {
    "prefix": ".onkeypress",
    "complete": ".onkeypress = "
  },
  {
    "prefix": ".onmousemove",
    "complete": ".onmousemove = "
  },
  {
    "prefix": ".onmousedown",
    "complete": ".onmousedown = "
  },
  {
    "prefix": ".onmouseup",
    "complete": ".onmouseup = "
  },
  {
    "prefix": "Math.abs",
    "complete": "Math.abs(|)"
  },
  {
    "prefix": "Math.ceil",
    "complete": "Math.ceil(|)"
  },
  {
    "prefix": "Math.floor",
    "complete": "Math.floor(|)"
  },
  {
    "prefix": "Math.random",
    "complete": "Math.random(|)"
  },
  {
    "prefix": "Math.round",
    "complete": "Math.round(|)"
  },
  {
    "prefix": "Math.max",
    "complete": "Math.max(|, )"
  },
  {
    "prefix": "Math.min",
    "complete": "Math.min(|, )"
  },
  {
    "prefix": "Math.pow",
    "complete": "Math.pow(|, )"
  },
  {
    "prefix": "Math.sqrt",
    "complete": "Math.sqrt(|)"
  },
  {
    "prefix": "Math.sin",
    "complete": "Math.sin(|)"
  },
  {
    "prefix": "Math.cos",
    "complete": "Math.cos(|)"
  },
  {
    "prefix": "Math.asin",
    "complete": "Math.asin(|)"
  },
  {
    "prefix": "Math.acos",
    "complete": "Math.acos(|)"
  },
  {
    "prefix": "Math.atan",
    "complete": "Math.atan(|)"
  },
  {
    "prefix": "Math.atan2",
    "complete": "Math.atan2(|)"
  },
  {
    "prefix": ".min",
    "complete": ".min"
  },
  {
    "prefix": ".max",
    "complete": ".max"
  },
  {
    "prefix": "prompt",
    "complete": "prompt(|^);"
  },
  {
    "prefix": ".pop",
    "complete": ".pop(|)"
  },
  {
    "prefix": ".push",
    "complete": ".push(|)"
  },
  {
    "prefix": ".removeChild",
    "complete": ".removeChild(|)"
  },
  {
    "prefix": ".setAttribute",
    "complete": ".setAttribute(\"|\", \"\")"
  },
  {
    "prefix": "return",
    "complete": "return "
  },
  {
    "prefix": "setInterval",
    "complete": "setInterval(|, 0)"
  },
  {
    "prefix": "setTimeout",
    "complete": "setTimeout(|, 0)"
  },
  {
    "prefix": ".shift",
    "complete": ".shift(|)"
  },
  {
    "prefix": ".style",
    "complete": ".style"
  },
  {
    "prefix": "style.animation",
    "complete": "style.animation"
  },
  {
    "prefix": "style.backgroundColor",
    "complete": "style.backgroundColor"
  },
  {
    "prefix": "style.backgroundImage",
    "complete": "style.backgroundImage"
  },
  {
    "prefix": "style.border",
    "complete": "style.border"
  },
  {
    "prefix": "style.borderWidth",
    "complete": "style.borderWidth"
  },
  {
    "prefix": "style.borderColor",
    "complete": "style.borderColor"
  },
  {
    "prefix": "style.borderStyle",
    "complete": "style.borderStyle"
  },
  {
    "prefix": "style.color",
    "complete": "style.color"
  },
  {
    "prefix": "style.display",
    "complete": "style.display"
  },
  {
    "prefix": "style.fontFamily",
    "complete": "style.fontFamily"
  },
  {
    "prefix": "style.fontSize",
    "complete": "style.fontSize"
  },
  {
    "prefix": "style.fontWeight",
    "complete": "style.fontWeight"
  },
  {
    "prefix": "style.left",
    "complete": "style.left"
  },
  {
    "prefix": "style.right",
    "complete": "style.right"
  },
  {
    "prefix": "style.top",
    "complete": "style.top"
  },
  {
    "prefix": "style.bottom",
    "complete": "style.bottom"
  },
  {
    "prefix": "style.margin",
    "complete": "style.margin"
  },
  {
    "prefix": "style.marginLeft",
    "complete": "style.marginLeft"
  },
  {
    "prefix": "style.marginRight",
    "complete": "style.marginRight"
  },
  {
    "prefix": "style.marginTop",
    "complete": "style.marginTop"
  },
  {
    "prefix": "style.marginBottom",
    "complete": "style.marginBottom"
  },
  {
    "prefix": "style.opacity",
    "complete": "style.opacity"
  },
  {
    "prefix": "style.padding",
    "complete": "style.padding"
  },
  {
    "prefix": "style.paddingLeft",
    "complete": "style.paddingLeft"
  },
  {
    "prefix": "style.paddingRight",
    "complete": "style.paddingRight"
  },
  {
    "prefix": "style.paddingTop",
    "complete": "style.paddingTop"
  },
  {
    "prefix": "style.paddingBottom",
    "complete": "style.paddingBottom"
  },
  {
    "prefix": "style.position",
    "complete": "style.position"
  },
  {
    "prefix": "style.transition",
    "complete": "style.transition"
  },
  {
    "prefix": "style.transform",
    "complete": "style.transform"
  },
  {
    "prefix": "style.visibility",
    "complete": "style.visibility"
  },
  {
    "prefix": "style.zIndex",
    "complete": "style.zIndex"
  },
  {
    "prefix": "switch",
    "complete": "switch (|^) {\n\t}"
  },
  {
    "prefix": "switch",
    "complete": "switch (|^) {\n\tcase 'x':\n\tbreak;\n\tdefault:\n\tbreak;\n}"
  },
  {
    "prefix": ".textContent",
    "complete": ".textContent"
  },
  {
    "prefix": "this",
    "complete": "this"
  },
  {
    "prefix": "typeof",
    "complete": "typeof(^|)"
  },
  {
    "prefix": ".unshift",
    "complete": ".unshift(|)"
  },
  {
    "prefix": ".value",
    "complete": ".value"
  },
  {
    "prefix": "var",
    "complete": "var "
  },
  {
    "prefix": "while",
    "complete": "while (|^) {\n\t}"
  },
  {
    "prefix": "//",
    "complete": "// ",
    "help": "JavaScript single-line comment"
  },
  {
    "prefix": "/* */",
    "complete": "/* ^| */",
    "help": "JavaScript multi-line comment"
  }
]