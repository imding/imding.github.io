{"version":3,"sources":["features/auth/user.svg","Firebase.ts","components/Dropdown.tsx","features/auth/actions.ts","features/auth/index.tsx","utils.ts","components/Panel/Header/Title.tsx","components/Panel/Header/Button.tsx","components/Panel/index.tsx","components/Panel/Content/Popup.tsx","features/flow/constants.ts","features/flow/components/ReteNodes/ElementNode.tsx","features/flow/components/ReteNodes/OutputNode.tsx","features/flow/components/ReteControls/InputManager.tsx","features/flow/components/ReteControls/TextInput.tsx","features/flow/components/ReteControls/ElementInput.tsx","features/flow/components/ReteControls/AttributeInput.tsx","features/flow/components/ReteComponents/OutputComponent.tsx","features/flow/components/ReteComponents/ElementComponent.tsx","features/flow/components/ReteEditor.tsx","features/flow/actions.ts","features/flow/components/GraphEditor.tsx","features/flow/components/GraphOutput.tsx","features/flow/components/FlowView.tsx","App.tsx","features/auth/reducer.ts","features/flow/reducer.ts","store/reducers/index.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","icons","Map","FcGoogle","FcPrivacy","FcExport","connect","state","showLogin","authReducer","dispatch","toggleLoginView","type","payload","props","trigger","header","options","cls","root","css","triggerWrapper","size","triggerImage","menuWrapper","menu","margin","optionIcons","optionText","map","opt","Icon","get","icon","key","onClick","handler","text","console","log","alt","src","auth","firebaseReducer","uid","displayName","email","photoURL","isLoaded","isEmpty","useFirebase","useFirestore","defaultProfileImage","Avatars","sprites","base64","colorful","create","login","provider","then","credential","additionalUserInfo","isNewUser","profile","givenName","given_name","familyName","family_name","collection","doc","set","content","signInAnonymously","logout","color","capitalise","str","charAt","toUpperCase","slice","toLowerCase","obj","srcObj","srcClone","Object","assign","clone","delete","keys","forEach","filter","selector","cb","forEachEntry","entries","entry","idx","forEachKey","hasKey","hasOwnProperty","call","mutate","toObj","item","srcKey","newItem","sort","fromEntries","a","b","key1","value1","key2","value2","keyGroups","groupLogic","sortedGroups","reduce","acc","value","group","push","values","React","memo","editable","graphTitle","sync","title","useRef","titleWrapper","current","className","tagName","html","disabled","onKeyDown","evt","preventDefault","stopPropagation","onPaste","nativeEvent","clipboardData","getData","window","getSelection","sel","getRangeAt","rangeCount","range","deleteContents","insertNode","document","createTextNode","insertTextAtCursor","onChange","target","trim","length","onBlur","cleanValue","textContent","innerText","Button","Toggle","toggle","hoverColor","activeColor","safeSize","iconCfg","name","useState","isToggled","toggleButton","Toggled","headerHeight","height","panel","style","cfg","hydrant","cuid","slug","children","KEY","graphs","flowReducer","card","graph","addSuffix","suffix","removeSuffix","split","shift","makeKey","head","HEAD","body","BODY","elm","ELEMENT","attr","ATTRIBUTE","CONTENT","TEXT","io","elmSocket","Rete","Socket","attrSocket","defaultNode","opts","border","backgroundColor","defaultTextField","display","whiteSpace","minWidth","maxWidth","minHeight","padding","fontFamily","borderRadius","cursor","outline","resize","attrFormat","tags","all","void","allowedInHead","defaultGraphJson","JSON","parse","output","ElementNode","this","node","bindSocket","bindControl","outputs","controls","inputs","Error","elementInput","find","ctrl","attributeManager","contentManager","fetchAndRegisterInput","manager","input","isMember","startsWith","notRegistered","data","includes","attributeInputs","contentInputs","toReactComponent","control","isConnected","showControl","socket","innerRef","width","ref","el","Node","HTMLNode","headContentMKey","bodyContentMKey","headContentManager","bodyContentManager","headInputs","bodyInputs","alignItems","textAlign","InputManager","emitter","component","update","addSocket","flexDirection","addEventListener","e","initial","sockets","nextNumber","n","Number","pop","putData","Control","editableStyle","marginRight","verticalAlign","readonlyStyle","fontStyle","TextContentControl","readonly","onRemove","locked","spellCheck","getEl","onpointerdown","setValue","removeInput","rows","line","cols","Math","max","toString","val","ElementPicker","id","tag","list","placeholder","marginLeft","fromData","stripBracket","elementName","replace","AttributeInput","parseAttr","empty","quote","match","_","escapedQuote","RegExp","warn","attrToString","OutputComponent","OutputNode","editor","addInputs","managerKey","inputKey","Input","addControl","TextInput","addInput","createElement","thisNode","nodes","setAttributes","attrs","setAttribute","buildTree","parent","append","err","syncInputs","afterSync","socketName","inp","connections","conn","removeConnection","label","newInput","contents","some","attributes","Component","ElementComponent","attrMKey","contentMKey","ElementInput","out","Output","addOutput","dataType","outputData","updateOutput","htmlString","container","NodeEditor","engine","Engine","componentList","register","use","ConnectionPlugin","ReactRenderPlugin","ContextMenuPlugin","on","abort","json","toJSON","outputNode","process","res","stringify","outerHTML","fromJSON","view","AreaPlugin","zoomAt","createEditor","toggleGraphBrowser","panelCfg","MdFolder","MdFolderOpen","alert","contentMap","MdGridOff","MdGridOn","MdResetView","MdSave","timestamp","moment","toDate","dbContent","lastEdited","merge","add","authorId","created","docRef","cleanJson","SectionHeader","position","vRef","vPos","paddingTop","GraphOutput","useSelector","right","top","menuHeight","srcDoc","bottom","theme","beautify","language","readOnly","wordWrap","scrollBeyondLastLine","scrollBeyondLastColumn","editorDidMount","model","getModel","updateOptions","tabSize","loader","exact","path","to","initialState","combineReducers","action","graphKey","graphJson","composeEnhancers","compose","createStore","rootReducer","Boolean","location","hostname","rrfProps","config","useFirestoreForProfile","store","createFirestoreInstance","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b5c01e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.2a44faa7.svg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst fbConfig = {\r\n\tapiKey: \"AIzaSyC9vwEzF5VUY3-O_z2uQMcZx-YPPBW8b3Q\",\r\n\tauthDomain: \"optimal-card-275517.firebaseapp.com\",\r\n\tdatabaseURL: \"https://optimal-card-275517.firebaseio.com\",\r\n\tprojectId: \"optimal-card-275517\",\r\n\tstorageBucket: \"optimal-card-275517.appspot.com\",\r\n\tmessagingSenderId: \"104004214282\",\r\n\tappId: \"1:104004214282:web:6c96da7ffd57723733c9f3\",\r\n\tmeasurementId: \"G-FN630FPVZ4\"\r\n};\r\n\r\nfirebase.initializeApp(fbConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","/** @jsx jsx */\r\n\r\nimport { jsx, css } from '@emotion/core';\r\nimport { connect } from 'react-redux';\r\nimport { FcGoogle, FcExport, FcPrivacy } from 'react-icons/fc';\r\nimport { IconType } from 'react-icons/lib/cjs';\r\n\r\nimport { toggleLoginView } from '../features/auth/actions';\r\n\r\nexport interface IDropdownTrigger {\r\n\ttype: 'image' | 'text',\r\n\tsrc: string,\r\n\tsize: number,\r\n\tmargin: number\r\n};\r\nexport interface IDropdownOption {\r\n\ticon: 'google' | 'anonymous' | 'logout',\r\n\ttext: string,\r\n\thandler: () => any,\r\n}\r\nexport interface IDropdown {\r\n\tshowLogin: boolean,\r\n\ttrigger: IDropdownTrigger,\r\n\theader: string,\r\n\toptions: IDropdownOption[],\r\n\tchildren?: any,\r\n\ttoggleLoginView: (showLogin: boolean) => any,\r\n};\r\n\r\nconst icons = new Map([\r\n\t['google', FcGoogle],\r\n\t['anonymous', FcPrivacy],\r\n\t['logout', FcExport],\r\n]);\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\tconst { showLogin } = state.authReducer;\r\n\treturn { showLogin };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n\ttoggleLoginView: (showLogin: boolean) => dispatch(toggleLoginView(showLogin))\r\n});\r\n\r\nconst Dropdown: React.FC<IDropdown> = props => {\r\n\tconst { trigger, header, options } = props;\r\n\tconst cls = {\r\n\t\troot: css`\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tvertical-align: middle;\r\n\t\t`,\r\n\t\ttriggerWrapper: css`\r\n\t\t\twidth: ${trigger.size}px;\r\n\t\t\theight: ${trigger.size}px;\r\n\t\t\tcursor: pointer;\r\n\t\t`,\r\n\t\ttriggerImage: css`\r\n\t\t\twidth: 100%;\r\n\t\t\tborder-radius: 50%;\r\n\t\t`,\r\n\t\tmenuWrapper: css`position: relative;`,\r\n\t\tmenu: css`\r\n\t\t\tborder: 1px solid #aaa;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: ${trigger.margin}px;\r\n\t\t\ttext-align: left;\r\n\t\t\toverflow: hidden;\r\n\t\t\ttransform: translateX(calc(-50% + ${trigger.size / 2}px));\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tz-index: 99;\r\n\t\t`,\r\n\t\theader: css`\r\n\t\t\tcolor: #444;\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 8px 16px;\r\n\t\t\tbackground-color: silver;\r\n\t\t\ttext-align: center;\r\n\t\t`,\r\n\t\toptions: css`\r\n\t\t\tpadding: 5px 12px 5px 10px;\r\n\t\t\tbackground-color: ghostwhite;\r\n\t\t\tcursor: pointer;\r\n\t\t`,\r\n\t\toptionIcons: css`\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tvertical-align: middle;\r\n\t\t`,\r\n\t\toptionText: css`\r\n\t\t\tcolor: gray;\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding-left: 5px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t`\r\n\t};\r\n\tconst menu = (\r\n\t\t<div css={cls.menu}>\r\n\t\t\t<h4 css={cls.header}>{header}</h4>\r\n\t\t\t{options.map((opt: any) => {\r\n\t\t\t\tconst Icon: IconType = icons.get(opt.icon)!;\r\n\t\t\t\tconst optHandler = () => {\r\n\t\t\t\t\tprops.toggleLoginView(!props.showLogin);\r\n\t\t\t\t\topt.handler();\r\n\t\t\t\t};\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={opt.icon} css={cls.options} onClick={optHandler}>\r\n\t\t\t\t\t\t<Icon css={cls.optionIcons} />\r\n\t\t\t\t\t\t<h5 css={cls.optionText}>{opt.text}</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconsole.log('render: <Dropdown>', !!props.showLogin);\r\n\r\n\treturn <div css={cls.root}>\r\n\t\t<div onClick={() => props.toggleLoginView(!props.showLogin)} css={cls.triggerWrapper}>\r\n\t\t\t{trigger.type === 'image'\r\n\t\t\t\t? <img alt='trigger' src={trigger.src} css={cls.triggerImage} />\r\n\t\t\t\t: <p>unknown trigger type</p>\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t{props.showLogin && <div css={cls.menuWrapper}>{menu}</div>}\r\n\t</div>;\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropdown);\r\n","\r\nexport const toggleLoginView = (showLogin: boolean) => ({\r\n\ttype: 'auth/TOGGLE_LOGIN_VIEW',\r\n\tpayload: showLogin\r\n});","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useFirebase, useFirestore } from 'react-redux-firebase';\r\nimport { MoonLoader } from 'react-spinners'\r\nimport Avatars from '@dicebear/avatars';\r\nimport sprites from '@dicebear/avatars-gridy-sprites';\r\n\r\nimport Dropdown, { IDropdownTrigger, IDropdownOption } from '../../components/Dropdown';\r\nimport defaultProfileImage from './user.svg';\r\n\r\nexport interface IFirebaseAuth {\r\n\tuid: string,\r\n\tdisplayName: string,\r\n\temail: string,\r\n\tphotoURL: string,\r\n\tisLoaded: boolean,\r\n\tisEmpty: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\tconst { auth } = state.firebaseReducer;\r\n\treturn {\r\n\t\tuid: auth.uid,\r\n\t\tdisplayName: auth.displayName,\r\n\t\temail: auth.email,\r\n\t\tphotoURL: auth.photoURL,\r\n\t\tisLoaded: auth.isLoaded,\r\n\t\tisEmpty: auth.isEmpty\r\n\t};\r\n};\r\n\r\nconst FirebaseAuth: React.FC<IFirebaseAuth> = props => {\r\n\tconst firebase = useFirebase();\r\n\tconst firestore = useFirestore();\r\n\tconst trigger: IDropdownTrigger = {\r\n\t\ttype: 'image',\r\n\t\tsrc: (props.isEmpty && defaultProfileImage)\r\n\t\t\t|| props.photoURL\r\n\t\t\t|| new Avatars(sprites, { base64: true, colorful: true }).create(props.uid),\r\n\t\tsize: 40,\r\n\t\tmargin: 15\r\n\t};\r\n\tconst header = props.isEmpty ? 'Log In' : (props.displayName || 'Anonymous');\r\n\tconst options: IDropdownOption[] = props.isEmpty\r\n\t\t? [{\r\n\t\t\ticon: 'google',\r\n\t\t\ttext: 'Google',\r\n\t\t\thandler: () => firebase.login({ provider: 'google', type: 'popup' })\r\n\t\t\t\t.then(credential => {\r\n\t\t\t\t\tconst { additionalUserInfo } = credential;\r\n\t\t\t\t\tconst { isNewUser, profile } = additionalUserInfo!;\r\n\t\t\t\t\tconst { given_name: givenName, family_name: familyName } = profile as any; \r\n\r\n\t\t\t\t\tif (isNewUser) {\r\n\t\t\t\t\t\tfirestore.collection('user').doc(props.uid).set({\r\n\t\t\t\t\t\t\tgivenName,\r\n\t\t\t\t\t\t\tfamilyName,\r\n\t\t\t\t\t\t\temail: props.email,\r\n\t\t\t\t\t\t\tcontent: {}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}, {\r\n\t\t\ticon: 'anonymous',\r\n\t\t\ttext: 'Anonymous',\r\n\t\t\thandler: () => firebase.auth().signInAnonymously()\r\n\t\t}]\r\n\t\t: [{\r\n\t\t\ticon: 'logout',\r\n\t\t\ttext: 'Log out',\r\n\t\t\thandler: () => firebase.logout()\r\n\t\t}];\r\n\r\n\tconsole.log('render: <FirebaseAuth>', props.isLoaded);\r\n\r\n\treturn props.isLoaded\r\n\t\t? <Dropdown trigger={trigger} header={header} options={options} />\r\n\t\t: <MoonLoader size={trigger.size * 0.6} color='white' />\r\n};\r\n\r\nexport default connect(mapStateToProps)(FirebaseAuth);","export const makeSource = (head: string, body: string): string => {\r\n\treturn `<html><head>${head}</head><body>${body}</body></html>`;\r\n};\r\n\r\nexport const capitalise = (str: string) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\nexport const titlise = (str: string) => str.split(/\\s*/).map(word => capitalise(word)).join(' ');\r\n\r\n\r\n// ========== OBJECTS ========== //\r\n\r\nexport function obj(srcObj: object) {\r\n\tconst srcClone: { [key: string]: any } = Object.assign({}, srcObj);\r\n\r\n\treturn {\r\n\t\tclone: () => srcClone,\r\n\t\tdelete: (...keys: Array<string>): object => {\r\n\t\t\tkeys.forEach(key => delete srcClone[key]);\r\n\t\t\treturn srcClone;\r\n\t\t},\r\n\t\t//  obj(o).filter('values', val => val.title !== 'Deleted by merging process');\r\n        /**\r\n         * - remove properties in source object based on input algorithm\r\n         * @returns source object as array\r\n         */\r\n\t\tfilter: (selector: 'keys' | 'values', cb: (arg: any) => any): Array<any> => {\r\n\t\t\treturn Object[selector](srcClone).filter(cb);\r\n\t\t},\r\n\t\tforEachEntry: (cb: (key: string, value: any, idx?: number) => any): void => {\r\n\t\t\tObject.entries(srcObj).forEach((entry, idx) => cb(entry[0], entry[1], idx));\r\n\t\t},\r\n\t\tforEachKey: (cb: (...arg: [string, number]) => any): void => {\r\n\t\t\tObject.keys(srcObj).forEach((key, idx) => cb(key, idx));\r\n\t\t},\r\n\t\thasKey: (key: string): boolean => ({}).hasOwnProperty.call(srcClone, key),\r\n\t\tmutate: (toObj: object): object => {\r\n\t\t\tObject.entries(toObj).forEach(item => {\r\n\t\t\t\tlet [srcKey, newItem] = item;\r\n\r\n\t\t\t\tif (srcObj.hasOwnProperty(srcKey)) {\r\n\t\t\t\t\tif (typeof newItem === 'object' && newItem !== null) delete srcClone[srcKey];\r\n\t\t\t\t\telse newItem = { [srcKey]: newItem };\r\n\r\n\t\t\t\t\tObject.assign(srcClone, newItem);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn srcClone;\r\n\t\t},\r\n\t\tsort: (selector: 'keys' | 'values', cb?: (...arg: [any, any]) => number) => {\r\n\t\t\treturn Object.fromEntries(Object.entries(srcClone).sort((a: [string, any], b: [string, any]) => {\r\n\t\t\t\tconst [key1, value1] = a;\r\n\t\t\t\tconst [key2, value2] = b;\r\n\r\n\t\t\t\tif (cb) return cb(a, b);\r\n\t\t\t\telse if (selector === 'keys') {\r\n\t\t\t\t\treturn key1 < key2 ? -1 : key1 > key2 ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (selector === 'values') {\r\n\t\t\t\t\treturn value1 - value2;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t}));\r\n\t\t\t// return Object[selector](srcClone).sort(cb || ((a: number, b: number) => a - b));\r\n\t\t},\r\n\t\t/**\r\n\t\t *- takes a function as argument that transforms each key in the source object\r\n\t\t *- transformed keys are then arranged into groups by uniqueness\r\n\t\t ** `const o = { key1: 1, key2: 2, key10: 10 };`\r\n\t\t ** `obj(0).uniqueKeyGroup(key => parseInt(key) >= 10 ? 'a' : 'b')` returns `[[10], [1, 2]]`\r\n         * @returns an array equal in size to the number of unique groups, each group an array containing the value of the \r\n         */\r\n\t\tkeyGroups: (groupLogic: (key: string) => string): any[] => {\r\n\t\t\tconst groups = Object.entries(srcClone).reduce((acc: any, entry: any) => {\r\n\t\t\t\tconst [key, value] = entry;\r\n\t\t\t\tconst group = groupLogic(key);\r\n\r\n\t\t\t\tif (acc.hasOwnProperty(group)) {\r\n\t\t\t\t\tacc[group].push(value);\r\n\t\t\t\t}\r\n\t\t\t\telse acc[group] = [value];\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {});\r\n\t\t\tconst sortedGroups = obj(groups).sort('keys');\r\n\r\n\t\t\treturn Object.values(sortedGroups);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// ========== TEXT ========== //\r\n\r\nexport function insertTextAtCursor(text: string) {\r\n\tif (window.getSelection) {\r\n\t\tconst sel = window.getSelection()!;\r\n\t\tif (sel.getRangeAt && sel.rangeCount) {\r\n\t\t\tconst range = sel.getRangeAt(0);\r\n\t\t\trange.deleteContents();\r\n\t\t\trange.insertNode(document.createTextNode(text));\r\n\t\t}\r\n\t}\r\n\t// else if ((document as any).selection && (document as any).selection.createRange) {\r\n\t// \t(document as any).selection.createRange().text = text;\r\n\t// }\r\n}","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React, { useRef } from 'react';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport { PulseLoader } from 'react-spinners';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { insertTextAtCursor } from '../../../utils';\r\n\r\nexport interface ITitle {\r\n\ttext: string,\r\n\tgraphTitle?: string,\r\n\teditable?: boolean,\r\n\tsync?: (text: string) => any\r\n}\r\n\r\nconst Title: React.FC<ITitle> = props => {\r\n\tconst { text, editable, graphTitle, sync } = props;\r\n\tconst title = useRef(graphTitle || text);\r\n\tconst cls = {\r\n\t\ttitleWrapper: css`\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-auto-flow: column;\r\n\t\t\tgrid-gap: 2px;\r\n\t\t\tplace-items: center;\r\n\t\t`,\r\n\t\ttitle: css`\r\n\t\t\tcolor: gold;\r\n\t\t\tfont-style: italic;\r\n\t\t\tpadding: 4px 8px;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\toutline: none;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tcursor: ${editable ? 'pointer' : 'auto'}; \r\n\t\t\ttransition: background-color 0.1s ease-in-out;\r\n\t\t\t&:hover {\r\n\t\t\t\tbackground-color: ${editable ? 'rgba(0, 0, 0, 0.2)' : 'unset'};\r\n\t\t\t}\r\n\t\t\t&:focus {\r\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.4);\r\n\t\t\t\tcursor: text;\r\n\t\t\t}\r\n\t\t`,\r\n\t};\r\n\r\n\tconsole.log('render: <Title>', !!title.current);\r\n\r\n\treturn (\r\n\t\ttitle.current\r\n\t\t\t? <div css={cls.titleWrapper}>\r\n\t\t\t\t{editable && <MdEdit color='gray' />}\r\n\t\t\t\t<ContentEditable\r\n\t\t\t\t\tclassName='editable'\r\n\t\t\t\t\ttagName='h4'\r\n\t\t\t\t\thtml={title.current}\r\n\t\t\t\t\tdisabled={!editable}\r\n\t\t\t\t\tonKeyDown={evt => {\r\n\t\t\t\t\t\tif (evt.key !== 'Enter') return;\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonPaste={evt => {\r\n\t\t\t\t\t\tconst clipboardData: DataTransfer = evt.nativeEvent.clipboardData!;\r\n\t\t\t\t\t\tconst text = clipboardData.getData('Text');\r\n\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\t\tinsertTextAtCursor(text);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={evt => {\r\n\t\t\t\t\t\tif (evt.target.value.trim().length === 0) {\r\n\t\t\t\t\t\t\tevt.target.value = title.current;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse title.current = evt.target.value.trim();\r\n\t\t\t\t\t\tsync && sync(title.current);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonBlur={evt => {\r\n\t\t\t\t\t\tconst cleanValue = evt.target.textContent?.trim() as string;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (cleanValue !== title.current) {\r\n\t\t\t\t\t\t\tevt.target.innerText = (cleanValue.length && cleanValue) || title.current;\r\n\t\t\t\t\t\t\ttitle.current = evt.target.innerText;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tcss={cls.title}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t: <PulseLoader size={6} color='gold' />\r\n\t);\r\n};\r\n\r\nexport default React.memo(Title);\r\n","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React, { useState } from 'react';\r\n\r\nimport { IconType } from 'react-icons/lib/cjs';\r\n\r\nexport interface IButton {\r\n\t/** Use icons from the \"react-icons\" library\r\n\t * @see https://react-icons.github.io/\r\n\t */\r\n\ticon: IconType,\r\n\ttitle: string,\r\n\t/** The size of the returned `<Icon>` will be `Math.max(size - 10, 20)`\r\n\t ** Padding is specified in `iconCfg` of `ToolbarAction`\r\n\t */\r\n\tsize?: number,\r\n\r\n\t/** If provided, the returned `<Icon>` will toggle between `icon` and `toggle` when clicked\r\n\t ** Use icons from the \"react-icons\" library\r\n\t * @see https://react-icons.github.io/\r\n\t */\r\n\ttoggle?: IconType,\r\n\tcolor?: string,\r\n\thoverColor?: string,\r\n\tactiveColor?: string,\r\n\thandler?: (arg?: any) => any\r\n}\r\n\r\nconst Button: React.FC<IButton> = props => {\r\n\tconst {\r\n\t\ticon: Icon,\r\n\t\ttoggle: Toggle,\r\n\t\ttitle, size,\r\n\t\tcolor,\r\n\t\thoverColor,\r\n\t\tactiveColor,\r\n\t\thandler\r\n\t} = props;\r\n\tconst safeSize = (size || 30) - 10;\r\n\tconst iconCfg = {\r\n\t\tcss: css`\r\n\t\t\twidth: ${safeSize}px;\r\n\t\t\theight: ${safeSize}px;\r\n\t\t\tpadding: 4px;\r\n\t\t\tbackground-color: transparent;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tcolor: ${color || 'inherit'};\r\n\t\t\tcursor: pointer; \r\n\t\t\ttransition: all 0.1s ease-in-out;\r\n\t\t\t&:hover {\r\n\t\t\t\tcolor: ${hoverColor || 'inherit'};\r\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\t\t}\r\n\t\t\t&:active {\r\n\t\t\t\tcolor: ${activeColor || 'inherit'};\r\n\t\t\t\topacity: 0.8;\r\n\t\t\t}\r\n\t\t`,\r\n\t\ttitle,\r\n\t\tonClick: handler\r\n\t};\r\n\r\n\tconsole.log('render: <Button>', Icon.name);\r\n\r\n\tif (!Toggle) return <Icon {...iconCfg} />;\r\n\r\n\tconst Binary: React.FC = props => {\r\n\t\tconst [isToggled, toggleButton] = useState<boolean>(false);\r\n\t\tconst Toggled = isToggled ? Toggle : Icon;\r\n\r\n\t\ticonCfg.onClick = () => {\r\n\t\t\ttoggleButton(!isToggled);\r\n\t\t\tconsole.log('isToggled:', isToggled);\r\n\t\t\thandler && handler(isToggled);\r\n\t\t};\r\n\t\t\r\n\t\treturn <Toggled {...iconCfg} />;\r\n\t};\r\n\r\n\treturn <Binary />;\r\n};\r\n\r\nexport default Button;\r\n","/** @jsx jsx */\r\nimport React from 'react';\r\nimport { jsx, css, SerializedStyles } from '@emotion/core';\r\nimport cuid from 'cuid';\r\n\r\nimport Title, { ITitle } from './Header/Title';\r\nimport Button, { IButton } from './Header/Button';\r\n\r\nexport interface IPanel {\r\n\theader: { height: number },\r\n\tname: string,\r\n\ttitle: ITitle,\r\n\t// content?: IContent,\r\n\toptions?: IButton[],\r\n\t/** use @emotion/core\r\n\t * @example style: css`property: value;`\r\n\t * @see https://emotion.sh/docs/css-prop\r\n\t */\r\n\tstyle?: SerializedStyles,\r\n\tcss?: never,\r\n\twidth?: string,\r\n\theight?: string,\r\n\tonMount?: (arg?: any) => any,\r\n};\r\n\r\nconst Panel: React.FC<IPanel> = props => {\r\n\tconst headerHeight = props.header.height || 42;\r\n\tconst cls = {\r\n\t\tpanel: css`\r\n\t\t\twidth: calc(100% - 10px);\r\n\t\t\theight: calc(100% - 10px);\r\n\t\t\tposition: relative;\r\n\t\t\tleft: 5px;\r\n\t\t\ttop: 5px;\r\n\t\t\toverflow: hidden;\r\n\t\t`,\r\n\t\theader: css`\r\n\t\t\theight: ${headerHeight}px;\r\n\t\t\tpadding: 0 10px;\r\n\t\t\tborder-radius: 6px 6px 0 0;\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-auto-flow: column;\r\n\t\t\tplace-items: center;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tbackground-color: #444;\r\n\t\t\tcolor: ghostwhite;\r\n\t\t`,\r\n\t\tname: css`\r\n\t\t\topacity: 0.6;\r\n\t\t\tcursor: default;\r\n\t\t\tuser-select: none;\r\n\t\t`,\r\n\t\toptions: css`\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-auto-flow: column;\r\n\t\t\tgrid-gap: 7px;\r\n\t\t`,\r\n\t\tcontent: css`\r\n\t\t\tposition: relative;\r\n\t\t\tmin-width: 300px;\r\n\t\t\theight: calc(100% - ${headerHeight}px);\r\n\t\t\tborder: 1px solid silver;\r\n\t\t\tborder-radius: 0 0 6px 6px;\r\n\t\t`\r\n\t};\r\n\tconst HeaderOptions = () => <div css={cls.options}>\r\n\t\t{(props.options || []).map((cfg: IButton) => {\r\n\t\t\tconst hydrant = {\r\n\t\t\t\tsize: props.header.height,\r\n\t\t\t\tkey: `${cfg.icon.name}-${cuid.slug()}`\r\n\t\t\t};\r\n\t\t\treturn <Button {...Object.assign(cfg, hydrant)} />\r\n\t\t})}\r\n\t</div>;\r\n\r\n\tconsole.log('render: <Panel>');\r\n\r\n\treturn (\r\n\t\t<div css={props.style}>\r\n\t\t\t<div css={cls.panel}>\r\n\t\t\t\t<div css={cls.header}>\r\n\t\t\t\t\t<h5 css={cls.name}>{props.name}</h5>\r\n\t\t\t\t\t<Title {...props.title} />\r\n\t\t\t\t\t<HeaderOptions />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div css={cls.content}>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Panel);","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\n\r\nexport interface IPopup {\r\n\tgraphs: any\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\tconst { graphs } = state.flowReducer;\r\n\treturn { graphs };\r\n};\r\n\r\nconst Popup: React.FC<IPopup> = props => {\r\n\tconst cls = {\r\n\t\tcard: css`\r\n\t\t\tposition: absolute;\r\n\t\t\tright: 5px;\r\n\t\t\ttop: 5px;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tcolor: ghostwhite;\r\n\t\t\tbackground-color: dimgray;\r\n\t\t\toverflow: hidden;\r\n\t\t`,\r\n\t\theader: css`\r\n\t\t\tpadding: 8px 12px;\r\n\t\t\tborder: solid rgba(0, 0, 0, 0.4);\r\n\t\t\tborder-width: 0 0 1px 0;\r\n\t\t\tbackground-color: #444;\r\n\t\t`\r\n\t};\r\n\r\n\treturn (\r\n\t\tprops.graphs\r\n\t\t\t? <div css={cls.card}>\r\n\t\t\t\t<h5 css={cls.header}>hello</h5>\r\n\t\t\t\t{props.graphs.map((graph: any) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={graph.key}>\r\n\t\t\t\t\t\t\t<p>{graph.title}</p>\r\n\t\t\t\t\t\t\t{/* <p>{graph.created}</p> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t: <div />\r\n\t);\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(Popup));","import Rete from 'rete';\r\n\r\nexport type Inputs = {\r\n\t[key: string]: any[]\r\n};\r\n\r\nexport enum KEY {\r\n\tHEAD = 'HEAD',\r\n\tBODY = 'BODY',\r\n\tELEMENT = 'ELEMENT',\r\n\tATTRIBUTE = 'ATTRIBUTE',\r\n\tCONTENT = 'CONTENT',\r\n\tTEXT = 'TEXT',\r\n}\r\nexport const keyDenoter = '::';\r\nexport const addSuffix = (key: string) => (suffix?: number | 'MANAGER') => `${key}${suffix ? `${keyDenoter}${suffix}` : ''}`;\r\nexport const removeSuffix = (str: string) => str.split(keyDenoter).shift()!;\r\nexport const getSuffix = (str: string) => Number(str.split(keyDenoter).pop()!);\r\nexport const makeKey = {\r\n\thead: addSuffix(KEY.HEAD),\r\n\tbody: addSuffix(KEY.BODY),\r\n\telm: addSuffix(KEY.ELEMENT),\r\n\tattr: addSuffix(KEY.ATTRIBUTE),\r\n\tcontent: addSuffix(KEY.CONTENT),\r\n\ttext: addSuffix(KEY.TEXT),\r\n\r\n\t/**\r\n\t * @param type `KEY.ATTRIBUTE | KEY.CONTENT | string`\r\n\t * - Creates keys exclusively for the `input` object\r\n\t * - The `input` object is received via connections between nodes\r\n\t * @returns plural of parameter string cerverted to lowercase\r\n\t */\r\n\tio: (type: KEY.ATTRIBUTE | KEY.CONTENT | string) => `${type.toLowerCase()}s`\r\n}\r\n\r\nexport const numSocket = new Rete.Socket('Number');\r\nexport const elmSocket = new Rete.Socket('Element');\r\nexport const attrSocket = new Rete.Socket('Attribute');\r\n\r\nexport const defaultNode = (opts?: any) => Object.assign({\r\n\tborder: 'none',\r\n\tbackgroundColor: 'gray'\r\n\t// padding: '6px 0 6px 0'\r\n}, opts || {});\r\n\r\nexport const defaultTextField = (opts?: any) => Object.assign({\r\n\tdisplay: 'inline-block',\r\n\twhiteSpace: 'pre-wrap',\r\n\tminWidth: '150px',\r\n\tmaxWidth: '250px',\r\n\tminHeight: '24px',\r\n\tpadding: '4px 6px',\r\n\tfontFamily: 'Monospace',\r\n\tcolor: 'ghostwhite',\r\n\tbackgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n\tborderRadius: '3px',\r\n\tcursor: 'text',\r\n\tborder: 'none',\r\n\toutline: 'none',\r\n\tresize: 'none'\r\n}, opts || {});\r\n\r\nexport const color = {\r\n\tadd: 'lightskyblue',\r\n\tremove: 'lightcoral',\r\n\tsync: 'gold'\r\n};\r\n\r\nexport const text = {\r\n\tnoConnection: 'No Connection'\r\n};\r\n\r\nexport const attrFormat = /^([a-z-]+)\\s*=\\s*(['\"])(.*)\\2$/;\r\n\r\nexport const tags = {\r\n\tall: [\r\n\t\t// IMPORTANT: ascending tag name lengths\r\n\t\t'p', 'b', 'u', 'i', 'a',\r\n\t\t'br', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol', 'li', 'em', 'hr', 'tt', 'dl', 'dt', 'dd', 'tr', 'th', 'td',\r\n\t\t'col', 'div', 'img', 'nav', 'sup', 'sub', 'pre', 'wbr',\r\n\t\t'area', 'base', 'code', 'html', 'meta', 'head', 'link', 'body', 'span', 'nobr', 'form',\r\n\t\t'embed', 'label', 'input', 'param', 'small', 'style', 'table', 'title', 'frame', 'track',\r\n\t\t'button', 'canvas', 'footer', 'header', 'keygen', 'iframe', 'strong', 'select', 'option', 'script', 'source', 'strike',\r\n\t\t'command', 'article', 'section',\r\n\t\t'noscript', 'textarea', 'frameset', 'noframes', 'progress',\r\n\t\t'blockquote',\r\n\t],\r\n\tvoid: ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'],\r\n\tallowedInHead: ['title', 'base', 'link', 'style', 'meta', 'script', 'noscript', 'template']\r\n};\r\nexport const attributes = {\r\n\tall: [\r\n\t\t'id',\r\n\t\t'alt', 'dir', 'for', 'low', 'max', 'min', 'rel', 'src',\r\n\t\t'cite', 'code', 'cols', 'data', 'form', 'high', 'href', 'icon', 'kind', 'lang', 'list', 'loop', 'name', 'open', 'ping', 'rows', 'size', 'slot', 'span', 'step', 'type', 'wrap',\r\n\t\t'align', 'async', 'class', 'defer', 'ismap', 'label', 'media', 'muted', 'scope', 'shape', 'sizes', 'start', 'style', 'title', 'value', 'width',\r\n\t\t'accept', 'action', 'coords', 'height', 'hidden', 'method', 'nowrap', 'poster', 'scoped', 'srcdoc', 'srcset', 'target', 'usemap',\r\n\t\t'charset', 'checked', 'colspan', 'compact', 'content', 'declare', 'default', 'dirname', 'enctype', 'headers', 'keytype', 'noshade', 'optimum', 'pattern', 'preload', 'rowspan', 'sandbox', 'srclang', 'summary',\r\n\t\t'autoplay', 'buffered', 'codebase', 'controls', 'datetime', 'disabled', 'download', 'dropzone', 'hreflang', 'itemprop', 'language', 'manifest', 'multiple', 'readonly', 'required', 'reversed', 'seamless', 'selected', 'tabindex',\r\n\t\t'accesskey', 'autofocus', 'challenge', 'draggable', 'integrity', 'maxlength', 'minlength', 'noresize', 'translate',\r\n\t\t'formaction', 'http-equiv', 'novalidate', 'radiogroup', 'spellcheck',\r\n\t\t'contextmenu', 'crossorigin', 'placeholder',\r\n\t\t'autocomplete',\r\n\t\t'accept-charset', 'autocapitalize',\r\n\t\t'contenteditable',\r\n\r\n\t\t// window events\r\n\t\t'onafterprint', 'onbeforeprint', 'onbeforeunload', 'onerror', 'onhashchange', 'onload', 'onmessage', 'onoffline', 'ononline', 'onpageshow', 'onpopstate', 'onresize', 'onstorage',\r\n\t\t// form events\r\n\t\t'onblur', 'onchange', 'oncontextmenu', 'onfocus', 'oninput', 'oninvalid', 'onreset', 'onsearch', 'onselect', 'onsubmit',\r\n\t\t// keyboard events\r\n\t\t'onkeydown', 'onkeypress', 'onkeyup',\r\n\t\t// mouse events\r\n\t\t'onclick', 'ondblclick', 'onmousedown', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onwheel',\r\n\t\t// drag events\r\n\t\t'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onscroll',\r\n\t\t// clipboard events\r\n\t\t'oncopy', 'oncut', 'onpaste',\r\n\t\t// media events\r\n\t\t'onabort', 'oncanplaythrough', 'oncuechange', 'ondurationchange', 'onemptied', 'onended', /*'onerror', */'onloadeddata', 'onloadedmetadata', 'onloadstart', 'onpaush', 'onplay', 'onplaying', 'onprogress', 'onratechange', 'onseeked', 'onseeking', 'onstalled', 'onsuspend', 'ontimeupdate', 'onvalumechange', 'onwaiting',\r\n\t\t// misc events\r\n\t\t'onshow', 'ontoggle',\r\n\t],\r\n\tboolean: ['checked', 'disabled', 'selected', 'readonly', 'multiple', 'ismap', 'defer', 'declare', 'noresize', 'nowrap', 'noshade', 'compact'],\r\n};\r\nexport const defaultGraphJson = JSON.parse(`{\r\n\t\"id\": \"flow@0.1.0\",\r\n\t\"nodes\": {\r\n\t\t\"1\": {\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"HEAD::MANAGER\": [\r\n\t\t\t\t\t\"HEAD::1\"\r\n\t\t\t\t],\r\n\t\t\t\t\"BODY::MANAGER\": [\r\n\t\t\t\t\t\"BODY::1\",\r\n\t\t\t\t\t\"BODY::2\",\r\n\t\t\t\t\t\"BODY::3\"\r\n\t\t\t\t],\r\n\t\t\t\t\"HEAD::1\": \"\",\r\n\t\t\t\t\"BODY::1\": \"\",\r\n\t\t\t\t\"BODY::2\": \"\",\r\n\t\t\t\t\"html\": {},\r\n\t\t\t\t\"BODY::3\": \"\"\r\n\t\t\t},\r\n\t\t\t\"inputs\": {\r\n\t\t\t\t\"HEAD::1\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 6,\r\n\t\t\t\t\t\t\t\"output\": \"ELEMENT\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"BODY::1\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 3,\r\n\t\t\t\t\t\t\t\"output\": \"ELEMENT\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"BODY::2\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 8,\r\n\t\t\t\t\t\t\t\"output\": \"ELEMENT\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t\"BODY::3\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 9,\r\n\t\t\t\t\t\t\t\"output\": \"ELEMENT\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"outputs\": {},\r\n\t\t\t\"position\": [\r\n\t\t\t\t326.8198575836843,\r\n\t\t\t\t-253.57021272790124\r\n\t\t\t],\r\n\t\t\t\"name\": \"HTML Output\"\r\n\t\t},\r\n\t\t\"3\": {\r\n\t\t\t\"id\": 3,\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"ELEMENT\": \"h1\",\r\n\t\t\t\t\"ATTRIBUTE::MANAGER\": [\r\n\t\t\t\t\t\"ATTRIBUTE::1\"\r\n\t\t\t\t],\r\n\t\t\t\t\"CONTENT::MANAGER\": [\r\n\t\t\t\t\t\"CONTENT::1\"\r\n\t\t\t\t],\r\n\t\t\t\t\"ATTRIBUTE::1\": {\r\n\t\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\t\"quote\": \"'\",\r\n\t\t\t\t\t\"value\": \"title\"\r\n\t\t\t\t},\r\n\t\t\t\t\"CONTENT::1\": \"Flow Coding\"\r\n\t\t\t},\r\n\t\t\t\"inputs\": {\r\n\t\t\t\t\"ATTRIBUTE::1\": {\r\n\t\t\t\t\t\"connections\": []\r\n\t\t\t\t},\r\n\t\t\t\t\"CONTENT::1\": {\r\n\t\t\t\t\t\"connections\": []\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"outputs\": {\r\n\t\t\t\t\"ELEMENT\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 1,\r\n\t\t\t\t\t\t\t\"input\": \"BODY::1\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"position\": [\r\n\t\t\t\t-98.94763055382651,\r\n\t\t\t\t-126.70301828346801\r\n\t\t\t],\r\n\t\t\t\"name\": \"Element\"\r\n\t\t},\r\n\t\t\"6\": {\r\n\t\t\t\"id\": 6,\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"ELEMENT\": \"style\",\r\n\t\t\t\t\"ATTRIBUTE::MANAGER\": [],\r\n\t\t\t\t\"CONTENT::MANAGER\": [\r\n\t\t\t\t\t\"CONTENT::1\"\r\n\t\t\t\t],\r\n\t\t\t\t\"CONTENT::1\": \"body {\\\\n  background-color: khaki;\\\\n}\\\\n\\\\n#title {\\\\n  text-align: center;\\\\n}\\\\n\"\r\n\t\t\t},\r\n\t\t\t\"inputs\": {\r\n\t\t\t\t\"CONTENT::1\": {\r\n\t\t\t\t\t\"connections\": []\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"outputs\": {\r\n\t\t\t\t\"ELEMENT\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 1,\r\n\t\t\t\t\t\t\t\"input\": \"HEAD::1\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"position\": [\r\n\t\t\t\t-409.9344543917789,\r\n\t\t\t\t-230.75957197685952\r\n\t\t\t],\r\n\t\t\t\"name\": \"Element\"\r\n\t\t},\r\n\t\t\"8\": {\r\n\t\t\t\"id\": 8,\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"ELEMENT\": \"h2\",\r\n\t\t\t\t\"ATTRIBUTE::MANAGER\": [],\r\n\t\t\t\t\"CONTENT::MANAGER\": [\r\n\t\t\t\t\t\"CONTENT::1\"\r\n\t\t\t\t],\r\n\t\t\t\t\"CONTENT::1\": \"Create HTML pages without having to worry about syntax.\"\r\n\t\t\t},\r\n\t\t\t\"inputs\": {\r\n\t\t\t\t\"CONTENT::1\": {\r\n\t\t\t\t\t\"connections\": []\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"outputs\": {\r\n\t\t\t\t\"ELEMENT\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 1,\r\n\t\t\t\t\t\t\t\"input\": \"BODY::2\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"position\": [\r\n\t\t\t\t-164.13953966187998,\r\n\t\t\t\t96.58648906386625\r\n\t\t\t],\r\n\t\t\t\"name\": \"Element\"\r\n\t\t},\r\n\t\t\"9\": {\r\n\t\t\t\"id\": 9,\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"ELEMENT\": \"img\",\r\n\t\t\t\t\"ATTRIBUTE::MANAGER\": [\r\n\t\t\t\t\t\"ATTRIBUTE::1\"\r\n\t\t\t\t],\r\n\t\t\t\t\"CONTENT::MANAGER\": [],\r\n\t\t\t\t\"ATTRIBUTE::1\": {\r\n\t\t\t\t\t\"name\": \"src\",\r\n\t\t\t\t\t\"quote\": \"'\",\r\n\t\t\t\t\t\"value\": \"https://app.bsd.education/resources/mole.png\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"inputs\": {\r\n\t\t\t\t\"ATTRIBUTE::1\": {\r\n\t\t\t\t\t\"connections\": []\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"outputs\": {\r\n\t\t\t\t\"ELEMENT\": {\r\n\t\t\t\t\t\"connections\": [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"node\": 1,\r\n\t\t\t\t\t\t\t\"input\": \"BODY::3\",\r\n\t\t\t\t\t\t\t\"data\": {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"position\": [\r\n\t\t\t\t-165.57480153423893,\r\n\t\t\t\t288.87417084221113\r\n\t\t\t],\r\n\t\t\t\"name\": \"Element\"\r\n\t\t}\r\n\t}\r\n}`);","/** @jsx jsx */\r\nimport { Node, Socket, Control } from 'rete-react-render-plugin';\r\nimport { jsx, css } from '@emotion/core';\r\n\r\nimport { KEY, makeKey, defaultNode } from '../../constants';\r\n\r\nconst cls = {\r\n\toutput: css`\r\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.4);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.2);\r\n\t\tborder-radius: 10px 10px 0 0;\r\n\t`,\r\n};\r\n\r\nexport default class ElementNode extends Node {\r\n\trender() {\r\n\t\tconst { node, bindSocket, bindControl } = this.props;\r\n\t\tconst { outputs, controls, inputs } = this.state;\r\n\r\n\t\tif (outputs.length !== 1) {\r\n\t\t\tthrow Error('The \"Element\" node should have only 1 output socket.');\r\n\t\t}\r\n\r\n\t\tconst output = outputs[0];\r\n\t\tconst elementInput = controls.find((ctrl: any) => ctrl.key === KEY.ELEMENT);\r\n\t\tconst attributeManager = controls.find((ctrl: any) => ctrl.key === makeKey.attr('MANAGER'));\r\n\t\tconst contentManager = controls.find((ctrl: any) => ctrl.key === makeKey.content('MANAGER'));\r\n\t\tconst fetchAndRegisterInput = (key: KEY, manager: string) => inputs.filter((input: any) => {\r\n\t\t\tconst isMember = input.key.startsWith(key);\r\n\t\t\tconst notRegistered = !node.data[manager].includes(input.key);\r\n\t\t\treturn isMember ? notRegistered ? node.data[manager].push(input.key) : true : false;\r\n\t\t});\r\n\t\tconst attributeInputs = fetchAndRegisterInput(KEY.ATTRIBUTE, makeKey.attr(\"MANAGER\"));\r\n\t\tconst contentInputs = fetchAndRegisterInput(KEY.CONTENT, makeKey.content(\"MANAGER\"));\r\n\t\tconst toReactComponent = (input: any) => {\r\n\t\t\tinput.control.data.isConnected = !input.showControl();\r\n\r\n\t\t\treturn <div className='input' key={input.key} >\r\n\t\t\t\t<Socket\r\n\t\t\t\t\ttype='input'\r\n\t\t\t\t\tsocket={input.socket}\r\n\t\t\t\t\tio={input}\r\n\t\t\t\t\tinnerRef={bindSocket}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='input-control'\r\n\t\t\t\t\ttitle={input.control.key}\r\n\t\t\t\t\tstyle={{ width: 'auto', margin: '6px 0' }}\r\n\t\t\t\t\tref={el => el && bindControl(el, input.control)}\r\n\t\t\t\t/>\r\n\t\t\t</div>;\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className='node' style={defaultNode({ backgroundColor: 'gray' })}>\r\n\t\t\t\t{/* Outputs */}\r\n\t\t\t\t{<div className='output' key={output.key} css={cls.output}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName='input-control'\r\n\t\t\t\t\t\ttitle={elementInput.key}\r\n\t\t\t\t\t\tstyle={{ width: 'auto', margin: '10px 0' }}\r\n\t\t\t\t\t\tref={el => el && bindControl(el, elementInput)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Socket\r\n\t\t\t\t\t\ttype='output'\r\n\t\t\t\t\t\tsocket={output.socket}\r\n\t\t\t\t\t\tio={output}\r\n\t\t\t\t\t\tinnerRef={bindSocket}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{/* ATTRIBUTE MENAGER */}\r\n\t\t\t\t<Control\r\n\t\t\t\t\tclassName='control'\r\n\t\t\t\t\tkey={attributeManager.key}\r\n\t\t\t\t\tcontrol={attributeManager}\r\n\t\t\t\t\tinnerRef={bindControl}\r\n\t\t\t\t/>\r\n\t\t\t\t{attributeInputs.map(toReactComponent)}\r\n\r\n\t\t\t\t{/* CONTENT MENAGER */}\r\n\t\t\t\t<Control\r\n\t\t\t\t\tclassName='control'\r\n\t\t\t\t\tkey={contentManager.key}\r\n\t\t\t\t\tcontrol={contentManager}\r\n\t\t\t\t\tinnerRef={bindControl}\r\n\t\t\t\t/>\r\n\t\t\t\t{contentInputs.map(toReactComponent)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","/** @jsx jsx */\r\nimport { Node, Socket, Control } from 'rete-react-render-plugin';\r\nimport { jsx, css } from '@emotion/core';\r\n\r\nimport { KEY, makeKey, defaultNode } from '../../constants';\r\n\r\nconst cls = {\r\n\ttitle: css`\r\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.4);\r\n\t\tbackground-color: rgba(0, 0, 0, 0.2);\r\n\t\tborder-radius: 10px 10px 0 0;\r\n\t`,\r\n};\r\nexport default class HTMLNode extends Node {\r\n\trender() {\r\n\t\tconst { node, bindControl, bindSocket } = this.props;\r\n\t\tconst { controls, inputs } = this.state;\r\n\t\tconst headContentMKey = makeKey.head('MANAGER');\r\n\t\tconst bodyContentMKey = makeKey.body('MANAGER');\r\n\t\tconst headContentManager = controls.find((ctrl: any) => ctrl.key === headContentMKey);\r\n\t\tconst bodyContentManager = controls.find((ctrl: any) => ctrl.key === bodyContentMKey);\r\n\t\tconst fetchAndRegisterInput = (key: KEY, manager: string) => inputs.filter((input: any) => {\r\n\t\t\tconst isMember = input.key.startsWith(key);\r\n\t\t\tconst notRegistered = !node.data[manager].includes(input.key);\r\n\t\t\treturn isMember ? notRegistered ? node.data[manager].push(input.key) : true : false;\r\n\t\t});\r\n\t\tconst headInputs = fetchAndRegisterInput(KEY.HEAD, headContentMKey);\r\n\t\tconst bodyInputs = fetchAndRegisterInput(KEY.BODY, bodyContentMKey);\r\n\t\tconst toReactComponent = (input: any) => {\r\n\t\t\tinput.control.data.isConnected = !input.showControl();\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className='input' key={input.key} style={{ display: 'flex' }}>\r\n\t\t\t\t\t<Socket\r\n\t\t\t\t\t\ttype='input'\r\n\t\t\t\t\t\tsocket={input.socket}\r\n\t\t\t\t\t\tio={input}\r\n\t\t\t\t\t\tinnerRef={bindSocket}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName='input-control'\r\n\t\t\t\t\t\ttitle={input.control.key}\r\n\t\t\t\t\t\tstyle={{ width: 'auto', display: 'flex', alignItems: 'center' }}\r\n\t\t\t\t\t\tref={el => el && bindControl(el, input.control)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className='node' style={defaultNode({ textAlign: 'center', backgroundColor: 'gray' })}>\r\n\t\t\t\t<div className='title' css={cls.title}>HTML Output</div>\r\n\t\t\t\t{/* HEAD CONTROL MANAGER */}\r\n\t\t\t\t<Control\r\n\t\t\t\t\tclassName='control'\r\n\t\t\t\t\tkey={headContentManager.key}\r\n\t\t\t\t\tcontrol={headContentManager}\r\n\t\t\t\t\tinnerRef={bindControl}\r\n\t\t\t\t/>\r\n\t\t\t\t{headInputs.map(toReactComponent)}\r\n\r\n\t\t\t\t{/* BODY CONTROL MANAGER */}\r\n\t\t\t\t<Control\r\n\t\t\t\t\tclassName='control'\r\n\t\t\t\t\tkey={bodyContentManager.key}\r\n\t\t\t\t\tcontrol={bodyContentManager}\r\n\t\t\t\t\tinnerRef={bindControl}\r\n\t\t\t\t/>\r\n\t\t\t\t{bodyInputs.map(toReactComponent)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport Rete from 'rete';\r\n\r\nimport { MdAddBox } from 'react-icons/md';\r\n\r\nimport { keyDenoter, getSuffix, removeSuffix, color } from '../../constants';\r\nimport { capitalise } from '../../../../utils';\r\n\r\nexport default class InputManager extends Rete.Control {\r\n\temitter: any;\r\n\tkey: string;\r\n\tnode: any;\r\n\tcomponent: (arg: any) => JSX.Element;\r\n\tprops: any;\r\n\tupdate: any;\r\n\r\n\tconstructor(emitter: any, key: string, node: any) {\r\n\t\tsuper(key);\r\n\r\n\t\tthis.emitter = emitter;\r\n\t\tthis.key = key;\r\n\t\tthis.component = ({ addSocket }) => {\r\n\t\t\tconst title = capitalise(removeSuffix(key));\r\n\r\n\t\t\treturn <div style={{\r\n\t\t\t\tcolor: 'white',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'row'\r\n\t\t\t}}>\r\n\t\t\t\t<h5 style={{ margin: '0', padding: '5px 0' }}>{title}</h5>\r\n\t\t\t\t<span\r\n\t\t\t\t\ttitle={`Add ${title}`}\r\n\t\t\t\t\tonClick={addSocket}\r\n\t\t\t\t\tref={ref => {\r\n\t\t\t\t\t\tref && ref.addEventListener('pointerdown', e => e.stopPropagation());\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MdAddBox style={{ margin: '6px 0 0 4px', color: color.add }} />\r\n\t\t\t\t</span>\r\n\t\t\t</div>;\r\n\t\t}\r\n\r\n\t\tconst initial = node.data[key] || [];\r\n\r\n\t\tnode.data[key] = initial;\r\n\r\n\t\tconst manager = removeSuffix(key);\r\n\r\n\t\tthis.props = {\r\n\t\t\taddSocket: () => {\r\n\t\t\t\tconst sockets = this.getData(key) as string[];\r\n\t\t\t\tconst nextNumber = sockets.reduce((acc: number, name: string) => {\r\n\t\t\t\t\tconst n = getSuffix(name);\r\n\t\t\t\t\treturn n >= acc ? acc = n + 1 : acc;\r\n\t\t\t\t}, 1);\r\n\r\n\t\t\t\tsockets.push(`${manager}${keyDenoter}${nextNumber}`);\r\n\t\t\t\tthis.putData(key, sockets);\r\n\t\t\t\tthis.emitter.trigger('process');\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}","import React from 'react';\r\nimport Rete from 'rete';\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { MdIndeterminateCheckBox as MdMinusBox } from 'react-icons/md';\r\nimport { text, color, defaultTextField } from '../../constants';\r\n\r\nconst editableStyle = {\r\n\tmarginRight: '2px',\r\n\tverticalAlign: 'middle'\r\n};\r\nconst readonlyStyle = {\r\n\tbackgroundColor: 'transparent',\r\n\tcolor: 'gainsboro',\r\n\tfontStyle: 'italic',\r\n\tcursor: 'pointer'\r\n};\r\n\r\nexport default class TextContentControl extends Rete.Control {\r\n\temitter: any;\r\n\tkey: string;\r\n\tnode: any;\r\n\tcomponent: (arg: any) => JSX.Element;\r\n\tprops: any;\r\n\tupdate: any;\r\n\r\n\tconstructor(emitter: any, key: string, node: any, readonly: boolean = false) {\r\n\t\tsuper(key);\r\n\r\n\t\tthis.emitter = emitter;\r\n\t\tthis.key = key;\r\n\t\tthis.component = ({ value, onChange, onRemove }) => {\r\n\t\t\tconst { isConnected } = this.data as any;\r\n\t\t\tconst content = isConnected ? key : readonly ? text.noConnection : value;\r\n\t\t\tconst locked = readonly || isConnected;\r\n\r\n\t\t\treturn <>\r\n\t\t\t\t<ContentEditable\r\n\t\t\t\t\tclassName='editable'\r\n\t\t\t\t\ttagName='pre'\r\n\t\t\t\t\tspellCheck='false'\r\n\t\t\t\t\tdisabled={locked}\r\n\t\t\t\t\thtml={content}\r\n\t\t\t\t\tonChange={e => onChange(e.target)}\r\n\t\t\t\t\tref={(ref: any) => ref && (ref.getEl().onpointerdown = (e: PointerEvent) => !locked && e.stopPropagation())}\r\n\t\t\t\t\tstyle={defaultTextField(locked ? readonlyStyle : editableStyle)}\r\n\t\t\t\t/>\r\n\t\t\t\t<MdMinusBox\r\n\t\t\t\t\tstyle={{ verticalAlign: 'middle', color: color.remove }}\r\n\t\t\t\t\tonClick={onRemove}\r\n\t\t\t\t/>\r\n\t\t\t</>;\r\n\t\t};\r\n\r\n\t\tconst initial = node.data[key] || '';\r\n\r\n\t\tnode.data[key] = initial;\r\n\r\n\t\tthis.props = {\r\n\t\t\treadonly,\r\n\t\t\tvalue: initial,\r\n\t\t\tonChange: (target: any) => {\r\n\t\t\t\tthis.setValue(target.value);\r\n\t\t\t\tthis.emitter.trigger('process');\r\n\t\t\t},\r\n\t\t\tonRemove: () => {\r\n\t\t\t\tthis.removeInput();\r\n\t\t\t\tthis.emitter.trigger('process');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tremoveInput() {\r\n\t\tthis.putData(this.key, null);\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tgetRows(target: HTMLTextAreaElement) {\r\n\t\tconst rows = target.value\r\n\t\t\t.split(/\\n/)\r\n\t\t\t.reduce((acc: number, line: string) => acc += line.length > target.cols ? 2 : 1, 0);\r\n\r\n\t\treturn Math.max(rows, 1).toString();\r\n\t}\r\n\r\n\tsetValue(val: any) {\r\n\t\tthis.props.value = val;\r\n\t\tthis.putData(this.key, val);\r\n\t\tthis.update();\r\n\t}\r\n}","import React from 'react';\r\nimport Rete from 'rete';\r\n\r\nimport { tags } from '../../constants';\r\n\r\nexport default class ElementPicker extends Rete.Control {\r\n\temitter: any;\r\n\tkey: string;\r\n\tnode: any;\r\n\tcomponent: (arg: any) => JSX.Element;\r\n\tprops: any;\r\n\tupdate: any;\r\n\r\n\tconstructor(emitter: any, key: string, node: any, readonly = false) {\r\n\t\tsuper(key);\r\n\r\n\t\tthis.emitter = emitter;\r\n\t\tthis.key = key;\r\n\t\tthis.node = node;\r\n\t\tthis.component = ({ value, onChange }: any) => <>\r\n\t\t\t<datalist id='tag-list'>\r\n\t\t\t\t{tags.all.map(tag => (<option key={tag}>{`<${tag}>`}</option>))}\r\n\t\t\t</datalist>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tlist='tag-list'\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder='element name'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '100px',\r\n\t\t\t\t\tminWidth: '100px',\r\n\t\t\t\t\tpadding: '4px 6px',\r\n\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.8)',\r\n\t\t\t\t\tfontFamily: 'Monospace',\r\n\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\toutline: 'none',\r\n\t\t\t\t\tborder: 'none',\r\n\t\t\t\t\tborderRadius: '4px',\r\n\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.4)'\r\n\t\t\t\t}}\r\n\t\t\t\tref={ref => {\r\n\t\t\t\t\tref && ref.addEventListener('pointerdown', e => e.stopPropagation());\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={e => onChange(e.target)}\r\n\t\t\t/>\r\n\t\t\t<h5 style={{ display: 'inline-block', verticalAlign: 'middle', color: 'white', marginLeft: '5px' }}>Element</h5>\r\n\t\t</>;\r\n\r\n\t\tconst fromData = node.data[key];\r\n\t\tconst initial = (fromData && `<${fromData}>`) || '';\r\n\r\n\t\tnode.data[key] = this.stripBracket(initial);\r\n\r\n\t\tthis.props = {\r\n\t\t\treadonly,\r\n\t\t\tvalue: initial,\r\n\t\t\tonChange: (el: HTMLInputElement) => {\r\n\t\t\t\tel.style.width = `${el.value.length * 8 + 12}px`;\r\n\t\t\t\tthis.setValue(el.value);\r\n\t\t\t\tthis.emitter.trigger('process');\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tsetValue(elementName: string) {\r\n\t\tconst tagName = this.stripBracket(elementName);\r\n\r\n\t\tthis.putData(this.key, tagName.trim().length ? tagName : '');\r\n\t\tthis.props.value = elementName;\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tstripBracket(str: string) {\r\n\t\treturn str.replace(/[<>]/g, '');\r\n\t}\r\n}","import React from 'react';\r\nimport Rete from 'rete';\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { MdIndeterminateCheckBox as MdMinusBox } from 'react-icons/md';\r\nimport { color, /* attributes, */attrFormat, defaultTextField } from '../../constants';\r\n\r\nconst editableStyle = {\r\n\tmarginRight: '2px',\r\n\tverticalAlign: 'middle'\r\n};\r\nconst readonlyStyle = {\r\n\tbackgroundColor: 'transparent',\r\n\tcolor: 'gainsboro',\r\n\tfontStyle: 'italic',\r\n\tcursor: 'pointer'\r\n};\r\n\r\nexport default class AttributeInput extends Rete.Control {\r\n\temitter: any;\r\n\tkey: string;\r\n\tnode: any;\r\n\tcomponent: (arg: any) => JSX.Element;\r\n\tprops: any;\r\n\tupdate: any;\r\n\r\n\tconstructor(emitter: any, key: string, node: any, readonly = false) {\r\n\t\tsuper(key);\r\n\r\n\t\tthis.emitter = emitter;\r\n\t\tthis.key = key;\r\n\t\tthis.component = ({ value, onChange, onRemove }) => {\r\n\t\t\tconst { isConnected } = this.data as any;\r\n\t\t\tconst content = isConnected ? key : value;\r\n\r\n\t\t\treturn <>\r\n\t\t\t\t<ContentEditable\r\n\t\t\t\t\tclassName='editable'\r\n\t\t\t\t\ttagName='pre'\r\n\t\t\t\t\tspellCheck='false'\r\n\t\t\t\t\tdisabled={isConnected}\r\n\t\t\t\t\thtml={content}\r\n\t\t\t\t\tonChange={e => onChange(e.target)}\r\n\t\t\t\t\tref={(ref: any) => ref && (ref.getEl().onpointerdown = (e: PointerEvent) => !isConnected && e.stopPropagation())}\r\n\t\t\t\t\tstyle={defaultTextField(isConnected ? readonlyStyle : editableStyle)}\r\n\t\t\t\t/>\r\n\t\t\t\t<MdMinusBox\r\n\t\t\t\t\tstyle={{ verticalAlign: 'middle', color: color.remove }}\r\n\t\t\t\t\tonClick={onRemove}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t};\r\n\r\n\t\tconst initial = node.data[key] || { name: '', quote: '', value: '' };\r\n\r\n\t\tnode.data[key] = initial;\r\n\r\n\t\tthis.props = {\r\n\t\t\treadonly,\r\n\t\t\tvalue: this.attrToString(initial),\r\n\t\t\tonChange: (target: any) => {\r\n\t\t\t\tthis.setValue(target.value);\r\n\t\t\t\tthis.emitter.trigger('process');\r\n\t\t\t},\r\n\t\t\tonRemove: () => {\r\n\t\t\t\tthis.removeInput();\r\n\t\t\t\tthis.emitter.trigger('process');\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tremoveInput() {\r\n\t\tthis.putData(this.key, null);\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tparseAttr = (str: string) => {\r\n\t\tconst empty = { name: '', quote: '', value: '' };\r\n\r\n\t\tstr = str.trim();\r\n\r\n\t\tif (str.length === 0) return empty;\r\n\r\n\t\tconst attr = str.match(attrFormat);\r\n\r\n\t\tif (attr === null) return empty;\r\n\r\n\t\tconst [_, name, quote, value] = str.match(attrFormat) as any;\r\n\t\tconst escapedQuote = new RegExp(`\\\\\\\\${quote}`, 'g');\r\n\t\tconst valueNoQuote = value.replace(escapedQuote, '');\r\n\r\n\t\tif (valueNoQuote.includes(quote)) {\r\n\t\t\tconsole.warn(`Incorrect quote usage in: ${_}`);\r\n\t\t\treturn empty;\r\n\t\t}\r\n\r\n\t\treturn { name, quote, value };\r\n\t}\r\n\r\n\tattrToString = (attr: any) => {\r\n\t\tconst { name, quote, value } = attr;\r\n\r\n\t\tif (name.length && quote.length && value.length) {\r\n\t\t\treturn `${name}=${quote}${value}${quote}`;\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n\tsetValue(val: string) {\r\n\t\tthis.props.value = val;\r\n\t\tthis.putData(this.key, this.parseAttr(val));\r\n\t\tthis.update();\r\n\t}\r\n}","import Rete from 'rete';\r\n\r\nimport { OutputNode } from '../ReteNodes';\r\nimport { InputManager, TextInput } from '../ReteControls';\r\nimport { KEY, makeKey, removeSuffix, tags, Inputs, elmSocket } from '../../constants';\r\nimport { obj, capitalise } from '../../../../utils';\r\n\r\nexport default class OutputComponent extends Rete.Component {\r\n\tconstructor() {\r\n\t\tsuper('HTML Output');\r\n\t\t(this.data as any).component = OutputNode;\r\n\t}\r\n\r\n\tbuilder(node: any) {\r\n\t\tconst headContentMKey = makeKey.head('MANAGER');\r\n\t\tconst bodyContentMKey = makeKey.body('MANAGER');\r\n\t\tconst headContentManager = new InputManager(this.editor, headContentMKey, node);\r\n\t\tconst bodyContentManager = new InputManager(this.editor, bodyContentMKey, node);\r\n\t\tconst addInputs = (managerKey: string, title: string, socket: any, readonly: boolean = false) => {\r\n\t\t\tnode.data[managerKey].forEach((inputKey: string) => {\r\n\t\t\t\tconst input = new Rete.Input(inputKey, title, socket);\r\n\t\t\t\tinput.addControl(new TextInput(this.editor, inputKey, node, readonly));\r\n\t\t\t\tnode.addInput(input);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tnode.addControl(headContentManager);\r\n\t\tnode.addControl(bodyContentManager);\r\n\r\n\t\taddInputs(headContentMKey, 'Element', elmSocket, true);\r\n\t\taddInputs(bodyContentMKey, 'Element', elmSocket);\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\tasync worker(node: any, inputs: Inputs) {\r\n\t\tconst html = document.createElement('html');\r\n\t\tconst head = document.createElement('head');\r\n\t\tconst body = document.createElement('body');\r\n\t\tconst thisNode = this.editor?.nodes.find(n => n.id === node.id)!;\r\n\t\tconst setAttributes = (el: HTMLElement, attrs: { name: string, value: string }[]) => {\r\n\t\t\tattrs.forEach(attr => attr.name.length && el.setAttribute(attr.name, attr.value));\r\n\t\t};\r\n\t\tconst buildTree = (parent: any | string): HTMLElement | Text => {\r\n\t\t\tif (typeof parent === 'string') {\r\n\t\t\t\treturn document.createTextNode(parent);\r\n\t\t\t}\r\n\r\n\t\t\tconst el = document.createElement(parent.name);\r\n\r\n\t\t\tsetAttributes(el, parent[makeKey.io(KEY.ATTRIBUTE)]);\r\n\t\t\tparent[makeKey.io(KEY.CONTENT)].forEach((content: any) => el.append(buildTree(content)));\r\n\t\t\treturn el;\r\n\t\t};\r\n\t\tconst handleError = (err: any) => {\r\n\t\t\t//\tTODO: handle errors\r\n\t\t};\r\n\t\tconst syncInputs = (opts: {\r\n\t\t\tmanagerKey: string,\r\n\t\t\treadonly?: boolean,\r\n\t\t\tafterSync?: (socketName: string) => boolean | void\r\n\t\t}) => {\r\n\t\t\tconst { managerKey, readonly, afterSync } = opts;\r\n\t\t\tconst then = (socketName: string) => afterSync ? afterSync(socketName) || true : true;\r\n\r\n\t\t\tnode.data[managerKey] = node.data[managerKey].filter((socketName: string) => {\r\n\t\t\t\tif (obj(node.data).hasKey(socketName)) {\r\n\t\t\t\t\t//\tinput has been deleted\r\n\t\t\t\t\tif (node.data[socketName] === null) {\r\n\t\t\t\t\t\tconst inp = thisNode.inputs.get(socketName);\r\n\r\n\t\t\t\t\t\tif (inp) {\r\n\t\t\t\t\t\t\tinp.connections.forEach(conn => this.editor?.removeConnection(conn));\r\n\t\t\t\t\t\t\tthisNode.removeInput(inp);\r\n\t\t\t\t\t\t\tthisNode.update();\r\n\t\t\t\t\t\t\tdelete node.data[socketName];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse console.warn(`Input was deleted from manager but was not found on ${node.name}(id: ${node.id}).`);\r\n\r\n\t\t\t\t\t\t//\tindicate input is trash\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\tno sync needed\r\n\t\t\t\t\treturn then(socketName);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst key = removeSuffix(socketName);\r\n\t\t\t\tconst label = capitalise(key);\r\n\t\t\t\tconst newInput = new Rete.Input(socketName, label, elmSocket);\r\n\t\t\t\tconst control = new TextInput(this.editor, socketName, node, !!readonly);\r\n\r\n\t\t\t\tnewInput.addControl(control);\r\n\t\t\t\tthisNode.addInput(newInput);\r\n\t\t\t\tthisNode.update();\r\n\r\n\t\t\t\treturn then(socketName);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tsyncInputs({\r\n\t\t\tmanagerKey: makeKey.head('MANAGER'),\r\n\t\t\treadonly: true,\r\n\t\t\tafterSync: socketName => {\r\n\t\t\t\t//\tsockets can receive multiple inputs\r\n\t\t\t\t//\there only the first one is retrieved\r\n\t\t\t\tconst input = inputs[socketName] && inputs[socketName][0];\r\n\r\n\t\t\t\tif (!input) {\r\n\t\t\t\t\treturn console.warn('The <head> element receives empty input.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst name = input.name;\r\n\r\n\t\t\t\tif (!tags.allowedInHead.includes(name)) {\r\n\t\t\t\t\treturn console.warn(`<${name}> element is not allowed inside the <head> element.`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst contents = input[makeKey.io(KEY.CONTENT)];\r\n\r\n\t\t\t\tif (contents.some((content: any) => typeof content !== 'string')) {\r\n\t\t\t\t\treturn console.warn('Elements inside the <head> element can not have nested elements.');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst el = document.createElement(name);\r\n\t\t\t\tconst attributes = input[makeKey.io(KEY.ATTRIBUTE)];\r\n\t\t\t\tconst textContent = contents.map((content: string) => document.createTextNode(content));\r\n\r\n\t\t\t\tsetAttributes(el, attributes);\r\n\t\t\t\tel.append(...textContent);\r\n\t\t\t\thead.append(el);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsyncInputs({\r\n\t\t\tmanagerKey: makeKey.body('MANAGER'),\r\n\t\t\tafterSync: socketName => {\r\n\t\t\t\t//\tfetch input data via socket\r\n\t\t\t\tconst input = inputs[socketName];\r\n\t\t\t\t//\tprioritise input data, fallback to node data\r\n\t\t\t\tconst root = (input && input[0]) || node.data[socketName];\r\n\r\n\t\t\t\t//\tbuild and append HTML elements\r\n\t\t\t\ttry { body.append(buildTree(root)) }\r\n\t\t\t\tcatch (err) { handleError(err) }\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\thtml.append(head, body);\r\n\t\tnode.data.html = html;\r\n\t}\r\n}","import Rete from 'rete';\r\n\r\nimport { ElementNode } from '../ReteNodes';\r\nimport {\r\n\tInputManager,\r\n\tElementInput,\r\n\tAttributeInput,\r\n\tTextInput\r\n} from '../ReteControls';\r\n\r\nimport { KEY, makeKey, removeSuffix, Inputs, elmSocket, attrSocket } from '../../constants';\r\nimport { obj, capitalise } from '../../../../utils';\r\n\r\nexport default class ElementComponent extends Rete.Component {\r\n\tconstructor() {\r\n\t\tsuper('Element');\r\n\t\t(this.data as any).component = ElementNode;\r\n\t}\r\n\r\n\tbuilder(node: any) {\r\n\t\tconst attrMKey = makeKey.attr('MANAGER');\r\n\t\tconst contentMKey = makeKey.content('MANAGER');\r\n\t\tconst elementInput = new ElementInput(this.editor, KEY.ELEMENT, node);\r\n\t\tconst attributeManager = new InputManager(this.editor, attrMKey, node);\r\n\t\tconst contentManager = new InputManager(this.editor, contentMKey, node);\r\n\t\tconst addInputs = (key: string, title: string, socket: any, control?: any) => {\r\n\t\t\tnode.data[key].forEach((inputKey: string) => {\r\n\t\t\t\tconst input = new Rete.Input(inputKey, title, socket);\r\n\t\t\t\tif (control) input.addControl(new control(this.editor, inputKey, node));\r\n\t\t\t\tnode.addInput(input);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tnode.addControl(elementInput)\r\n\t\t\t.addControl(attributeManager)\r\n\t\t\t.addControl(contentManager);\r\n\r\n\t\taddInputs(attrMKey, 'Attribute', attrSocket, AttributeInput);\r\n\t\taddInputs(contentMKey, 'Element', elmSocket, TextInput);\r\n\r\n\t\tconst out = new Rete.Output(KEY.ELEMENT, 'Element', elmSocket);\r\n\r\n\t\treturn node.addOutput(out);\r\n\t}\r\n\r\n\tasync worker(node: any, inputs: Inputs, outputs: any) {\r\n\t\tconst elementName = node.data[KEY.ELEMENT];\r\n\r\n\t\tif (!elementName) return console.warn('Missing element name.');\r\n\r\n\t\tconst thisNode = this.editor?.nodes.find(n => n.id === node.id)!;\r\n\t\tconst syncInputs = (opts: {\r\n\t\t\tmanagerKey: string,\r\n\t\t\tcontrol?: any,\r\n\t\t\treadonly?: boolean,\r\n\t\t\tafterSync?: (socketName: string) => boolean | void\r\n\t\t}) => {\r\n\t\t\tconst { managerKey, control, readonly, afterSync } = opts;\r\n\t\t\tconst then = (socketName: string) => (afterSync && afterSync(socketName)) || true;\r\n\r\n\t\t\tnode.data[managerKey] = node.data[managerKey].filter((socketName: string) => {\r\n\t\t\t\tif (obj(node.data).hasKey(socketName)) {\r\n\t\t\t\t\t//\tinput has been deleted\r\n\t\t\t\t\tif (node.data[socketName] === null) {\r\n\t\t\t\t\t\tconst inp = thisNode.inputs.get(socketName);\r\n\r\n\t\t\t\t\t\tif (inp) {\r\n\t\t\t\t\t\t\tinp.connections.forEach(conn => this.editor?.removeConnection(conn));\r\n\t\t\t\t\t\t\tthisNode.removeInput(inp);\r\n\t\t\t\t\t\t\tthisNode.update();\r\n\t\t\t\t\t\t\tdelete node.data[socketName];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse console.warn(`Input was deleted from manager but was not found on ${node.name}(id: ${node.id}).`);\r\n\r\n\t\t\t\t\t\t//\tindicate input is trash\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\tno sync needed\r\n\t\t\t\t\treturn then(socketName);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst key = removeSuffix(socketName);\r\n\t\t\t\tconst label = capitalise(key);\r\n\t\t\t\tconst newInput = new Rete.Input(socketName, label, elmSocket);\r\n\r\n\t\t\t\tnewInput.addControl(new (control || TextInput)(this.editor, socketName, node, !!readonly));\r\n\t\t\t\tthisNode.addInput(newInput);\r\n\t\t\t\tthisNode.update();\r\n\r\n\t\t\t\treturn then(socketName);\r\n\t\t\t});\r\n\t\t};\r\n\t\tconst afterSync = (socketName: string) =>  {\r\n\t\t\tconst input = inputs[socketName] && inputs[socketName][0];\r\n\t\t\tconst dataType = makeKey.io(removeSuffix(socketName));\r\n\t\t\tconst outputData = input || node.data[socketName];\r\n\t\t\toutputs[KEY.ELEMENT][dataType].push(outputData);\r\n\t\t};\r\n\r\n\t\toutputs[KEY.ELEMENT] = {\r\n\t\t\tname: node.data[KEY.ELEMENT],\r\n\t\t\tattributes: [],\r\n\t\t\tcontents: []\r\n\t\t};\r\n\r\n\t\tsyncInputs({ managerKey: makeKey.attr('MANAGER'), control: AttributeInput, afterSync });\r\n\t\tsyncInputs({ managerKey: makeKey.content('MANAGER'), afterSync });\r\n\t}\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Rete from 'rete';\r\n\r\nimport { NodeData } from 'rete/types/core/data';\r\nimport ReactRenderPlugin from 'rete-react-render-plugin';\r\nimport ConnectionPlugin from 'rete-connection-plugin';\r\nimport ContextMenuPlugin from 'rete-context-menu-plugin';\r\nimport AreaPlugin from 'rete-area-plugin';\r\n// import ModulePlugin from 'rete-module-plugin';\r\n\r\nimport * as componentList from './ReteComponents';\r\n\r\nimport { updateOutput } from '../actions';\r\nimport { defaultGraphJson } from '../constants';\r\n\r\nexport interface IReteEditor {\r\n\tsync: (json: any) => any,\r\n\t// resolveGraph: (arg: any) => any,\r\n\tupdateOutput: (arg: any) => any\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n\t// resolveGraph: (graphJson: any) => dispatch(resolveGraph(graphJson)),\r\n\tupdateOutput: (htmlString: any) => dispatch(updateOutput(htmlString))\r\n});\r\n\r\nconst ReteEditor = (props: IReteEditor) => {\r\n\tconst createEditor = (container: HTMLDivElement) => {\r\n\t\tconst editor = new Rete.NodeEditor('flow@0.1.0', container);\r\n\t\tconst engine = new Rete.Engine('flow@0.1.0');\r\n\t\tconst components = Object.values(componentList).map(component => new component());\r\n\t\r\n\t\tcomponents.forEach(component => {\r\n\t\t\teditor.register(component);\r\n\t\t\tengine.register(component);\r\n\t\t});\r\n\t\r\n\t\teditor.use(ConnectionPlugin);\r\n\t\teditor.use(ReactRenderPlugin);\r\n\t\teditor.use(ContextMenuPlugin);\r\n\t\r\n\t\teditor.on([\r\n\t\t\t'process',\r\n\t\t\t'nodecreated',\r\n\t\t\t'noderemoved',\r\n\t\t\t'connectioncreated',\r\n\t\t\t'connectionremoved'\r\n\t\t], async () => {\r\n\t\t\tawait engine.abort();\r\n\t\r\n\t\t\tconst json = editor.toJSON();\r\n\t\t\tconst outputNode = Object.values(json.nodes).find(node => node.name === 'HTML Output') as NodeData;\r\n\t\r\n\t\t\tawait engine.process(json).then(res => {\r\n\t\t\t\tif (res === 'success' && outputNode) {\t\t\t\t\t\r\n\t\t\t\t\t//\tstringify and parse json to strip field values incompatible with firestore\r\n\t\t\t\t\t// props.resolveGraph(JSON.parse(JSON.stringify(json)));\r\n\t\t\t\t\tprops.sync && props.sync(JSON.parse(JSON.stringify(json)));\r\n\t\t\t\t\tprops.updateOutput((outputNode.data.html as HTMLElement).outerHTML);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\r\n\t\teditor.fromJSON(defaultGraphJson);\r\n\t\teditor.trigger(\"process\");\r\n\t\teditor.view.resize();\r\n\t\tAreaPlugin.zoomAt(editor);\r\n\t};\r\n\r\n\treturn <div ref={ref => ref && createEditor(ref)} />;\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(React.memo(ReteEditor));","\r\n\r\nexport const toggleGraphBrowser = (graphs: any) => ({\r\n\ttype: 'flow/TOGGLE_GRAPH_BROWSER',\r\n\tpayload: graphs\r\n});\r\n\r\nexport const setGraphKey = (graphKey: string) => ({\r\n\ttype: 'flow/SET_GRAPH_KEY',\r\n\tpayload: graphKey\r\n});\r\n\r\nexport const setGraphTitle = (title: string) => ({\r\n\ttype: 'flow/SET_GRAPH_TITLE',\r\n\tpayload: title\r\n});\r\n\r\nexport const resolveGraph = (graphJson: any) => ({\r\n\ttype: 'flow/RESOLVE_GRAPH',\r\n\tpayload: graphJson\r\n});\r\n\r\nexport const updateOutput = (htmlString: string) => ({\r\n\ttype: 'flow/UPDATE_OUTPUT',\r\n\tpayload: htmlString\r\n});","/** @jsx jsx */\r\nimport { jsx, css } from '@emotion/core';\r\nimport React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useFirestore } from 'react-redux-firebase';\r\nimport moment from 'moment';\r\nimport {\r\n\tMdSave,\r\n\tMdFolder,\r\n\tMdFolderOpen,\r\n\tMdGridOn,\r\n\tMdGridOff,\r\n\tMdYoutubeSearchedFor as MdResetView,\r\n} from 'react-icons/md';\r\n\r\nimport { toggleGraphBrowser } from '../../flow/actions';\r\nimport Panel, { IPanel } from '../../../components/Panel';\r\nimport Popup from '../../../components/Panel/Content/Popup';\r\nimport ReteEditor from './ReteEditor';\r\n\r\nexport interface IGraphEditor {\r\n\tuid: string,\r\n\tisEmpty: boolean,\r\n\ttoggleGraphBrowser: (arg: any) => any,\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\tconst { auth } = state.firebaseReducer;\r\n\r\n\treturn {\r\n\t\tuid: auth.uid,\r\n\t\tisEmpty: auth.isEmpty\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n\ttoggleGraphBrowser: (graphs: any) => dispatch(toggleGraphBrowser(graphs))\r\n});\r\n\r\nconst GraphEditor: React.FC<IGraphEditor> = props => {\r\n\tconst firestore = useFirestore();\r\n\tconst key = useRef<null | string>(null);\r\n\tconst title = useRef('Untitled Graph');\r\n\tconst json = useRef();\r\n\tconst openHandler = (isToggled: boolean) => {\r\n\t\tif (props.isEmpty) return alert('Log in first');\r\n\r\n\t\tif (isToggled) {\r\n\t\t\tprops.toggleGraphBrowser(null);\r\n\t\t}\r\n\t\telse firestore.collection('user').doc(props.uid).get().then(doc => {\r\n\t\t\tconst contentMap = doc.data()!.content || [];\r\n\t\t\tconst graphs = Object.entries(contentMap)\r\n\t\t\t\t.filter(([key, value]: any) => value.type === 'flowGraph')\r\n\t\t\t\t.map(([key, value]: any) => {\r\n\t\t\t\t\tdelete value.type;\r\n\t\t\t\t\treturn Object.assign(value, { key });\r\n\t\t\t\t});\r\n\r\n\t\t\tprops.toggleGraphBrowser(graphs);\r\n\t\t});\r\n\t};\r\n\tconst saveHandler = () => {\r\n\t\tif (props.isEmpty) return alert('Log in first');\r\n\r\n\t\tconst timestamp = moment().toDate();\r\n\t\tconst dbContent = firestore.collection('userContent');\r\n\t\tconst mergeSave = () => dbContent.doc(key.current!).set({\r\n\t\t\tlastEdited: timestamp,\r\n\t\t\ttitle: title.current,\r\n\t\t\tjson: json.current\r\n\t\t}, { merge: true });\r\n\t\tconst newSave = () => dbContent.add({\r\n\t\t\tauthorId: props.uid,\r\n\t\t\tcreated: timestamp,\r\n\t\t\ttitle: title.current,\r\n\t\t\tjson: json.current,\r\n\t\t}).then(docRef => {\r\n\t\t\tkey.current = docRef.id;\r\n\t\t\tfirestore.collection('user').doc(props.uid).update({\r\n\t\t\t\t[`content.${docRef.id}`]: {\r\n\t\t\t\t\ttype: 'flowGraph',\r\n\t\t\t\t\ttitle: title.current,\r\n\t\t\t\t\tcreated: timestamp\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tkey.current ? mergeSave() : newSave();\r\n\t};\r\n\tconst panelCfg: IPanel = {\r\n\t\tstyle: css`\r\n\t\t\twidth: calc(100% - 640px);\r\n\t\t\theight: 100%;\r\n\t\t`,\r\n\t\theader: { height: 38 },\r\n\t\tname: 'Graph Editor',\r\n\t\ttitle: {\r\n\t\t\ttext: title.current,\r\n\t\t\teditable: true,\r\n\t\t\tsync: text => title.current = text\r\n\t\t},\r\n\t\toptions: [{\r\n\t\t\ticon: MdFolder,\r\n\t\t\ttoggle: MdFolderOpen,\r\n\t\t\ttitle: 'Open a previously saved graph',\r\n\t\t\thandler: openHandler\r\n\t\t}, {\r\n\t\t\ticon: MdGridOff,\r\n\t\t\ttoggle: MdGridOn,\r\n\t\t\ttitle: 'Toggle editor background grid'\r\n\t\t}, {\r\n\t\t\ticon: MdResetView,\r\n\t\t\ttitle: 'Reset graph view'\r\n\t\t}, {\r\n\t\t\ticon: MdSave,\r\n\t\t\ttitle: 'Save the graph',\r\n\t\t\thandler: saveHandler\r\n\t\t}],\r\n\t};\r\n\r\n\tconsole.log('render: <GraphEditor>')\r\n\r\n\treturn (\r\n\t\t<Panel {...panelCfg}>\r\n\t\t\t<ReteEditor sync={cleanJson => json.current = cleanJson} />\r\n\t\t\t<Popup />\r\n\t\t</Panel>\r\n\t);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(GraphEditor));\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MonacoEditor from 'react-monaco-editor';\r\nimport beautify from 'js-beautify';\r\n\r\nimport { makeSource } from '../../../utils';\r\n\r\nconst menuHeight = 30;\r\nconst SectionHeader = (props: {\r\n\ttext: string,\r\n\tvRef: 'top' | 'bottom'\r\n\tvPos: number,\r\n}) => {\r\n\treturn <div\r\n\t\tstyle={{\r\n\t\t\tposition: 'absolute',\r\n\t\t\t[props.vRef]: `${props.vPos}px`,\r\n\t\t\twidth: '100%',\r\n\t\t\theight: `${menuHeight}px`,\r\n\t\t\tbackgroundColor: '#1a1a1a'\r\n\t\t}}\r\n\t>\r\n\t\t<h5 style={{\r\n\t\t\tcolor: 'white',\r\n\t\t\tpaddingTop: '5px',\r\n\t\t\ttextAlign: 'center'\r\n\t\t}}>{props.text}</h5>\r\n\t</div>\r\n};\r\n\r\nconst GraphOutput = () => {\r\n\tconst { htmlString } = useSelector((state: any) => state.flowReducer);\r\n\tconst width = 640;\r\n\tconst codeViewerHeight = width / 16 * 9;\r\n\tconst tabSize = 2;\r\n\r\n\tconsole.log('render: <GraphOutput>')\r\n\r\n\treturn <div\r\n\t\tid='graph-output'\r\n\t\tstyle={{\r\n\t\t\twidth: `${width}px`,\r\n\t\t\theight: '100%',\r\n\t\t\tposition: 'absolute',\r\n\t\t\tright: '0',\r\n\t\t\ttop: '0'\r\n\t\t}}\r\n\t>\r\n\t\t<SectionHeader\r\n\t\t\ttext='Output Viewer'\r\n\t\t\tvRef='top'\r\n\t\t\tvPos={0}\r\n\t\t/>\r\n\r\n\t\t<iframe\r\n\t\t\tid='output-viewer'\r\n\t\t\ttitle='HTML Output'\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t\ttop: `${menuHeight}px`,\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\theight: `calc(100% - ${codeViewerHeight}px - ${menuHeight * 2}px)`,\r\n\t\t\t\tborder: 'none'\r\n\t\t\t}}\r\n\t\t\tsrcDoc={htmlString || makeSource('', '<h1>Flow</h1>')}\r\n\t\t/>\r\n\r\n\t\t<SectionHeader\r\n\t\t\ttext='Code Viewer'\r\n\t\t\tvRef='bottom'\r\n\t\t\tvPos={codeViewerHeight}\r\n\t\t/>\r\n\r\n\t\t<div style={{\r\n\t\t\tposition: 'absolute',\r\n\t\t\tbottom: '0'\r\n\t\t}}>\r\n\t\t\t<MonacoEditor\r\n\t\t\t\twidth={width}\r\n\t\t\t\theight={codeViewerHeight}\r\n\t\t\t\ttheme='vs-dark'\r\n\t\t\t\tvalue={beautify.html(htmlString, { 'indent_size': tabSize, 'inline': [] })}\r\n\t\t\t\tlanguage='html'\r\n\t\t\t\toptions={{\r\n\t\t\t\t\treadOnly: true,\r\n\t\t\t\t\twordWrap: 'on',\r\n\t\t\t\t\tscrollBeyondLastLine: false,\r\n\t\t\t\t\tscrollBeyondLastColumn: 10,\r\n\t\t\t\t}}\r\n\t\t\t\teditorDidMount={editor => {\r\n\t\t\t\t\tconst model = editor.getModel();\r\n\t\t\t\t\tif (model) model.updateOptions({ tabSize });\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</div>;\r\n};\r\n\r\nexport default GraphOutput;","/** @jsx jsx */\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { jsx, css } from '@emotion/core';\r\nimport { FadeLoader } from 'react-spinners'\r\n\r\nimport GraphEditor from './GraphEditor';\r\nimport GraphOutput from './GraphOutput';\r\n\r\nexport interface IFlowView {\r\n\tisLoaded: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\tconst { auth } = state.firebaseReducer;\r\n\treturn { isLoaded: auth.isLoaded };\r\n};\r\n\r\nconst FlowView: React.FC<IFlowView> = props => {\r\n\tconst cls = {\r\n\t\tview: css`\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tposition: relative;\r\n\t\t`,\r\n\t\tloader: css`\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tdisplay: grid;\r\n\t\t\tplace-items: center;\r\n\t\t`,\r\n\t};\r\n\r\n\tconsole.log('render: <FlowView>', props.isLoaded);\r\n\r\n\treturn props.isLoaded\r\n\t\t? <div css={cls.view}>\r\n\t\t\t<GraphEditor />\r\n\t\t\t<GraphOutput />\r\n\t\t</div>\r\n\t\t: <div css={cls.loader}>\r\n\t\t\t<FadeLoader color='dimgray' />\r\n\t\t</div>;\r\n};\r\n\r\nexport default connect(mapStateToProps)(FlowView);\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport FirebaseAuth from './features/auth';\nimport FlowView from './features/flow/components/FlowView';\n\nimport './App.css';\n\n\nexport default () => {\n\tconsole.log('render: <App>');\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<span />\n\t\t\t\t<FirebaseAuth />\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t<Redirect to='/flow' />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path='/flow'>\n\t\t\t\t\t\t\t<FlowView />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</main>\n\t\t</div >\n\t);\n};\n","\r\nconst initialState = {};\r\n\r\nexport const authReducer = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'auth/TOGGLE_LOGIN_VIEW':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowLogin: action.payload\r\n\t\t\t};\r\n\t\tdefault: return state;\r\n\t}\r\n};","\r\nconst initialState = {};\r\n\r\nexport const flowReducer = (state = initialState, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'flow/TOGGLE_GRAPH_BROWSER':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgraphs: action.payload\r\n\t\t\t};\r\n\t\tcase 'flow/SET_GRAPH_KEY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgraphKey: action.payload\r\n\t\t\t};\r\n\t\tcase 'flow/SET_GRAPH_TITLE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgraphTitle: action.payload\r\n\t\t\t};\r\n\t\tcase 'flow/RESOLVE_GRAPH':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgraphJson: action.payload,\r\n\t\t\t};\r\n\t\tcase 'flow/UPDATE_OUTPUT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\thtmlString: action.payload.trim()\r\n\t\t\t};\r\n\t\tdefault: return state;\r\n\t}\r\n};","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { authReducer  } from '../../features/auth/reducer';\r\nimport { flowReducer  } from '../../features/flow/reducer';\r\n\r\nexport default combineReducers({\r\n\tauthReducer,\r\n\tflowReducer,\r\n\tfirebaseReducer\r\n});","import { compose, createStore } from 'redux';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development'\r\n\t? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\t: compose;\r\n\r\nexport default createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers()\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\tprocess.env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport firebase from './Firebase';\nimport 'firebase/firestore';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\n\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst rrfConfig = {\n\t// userProfile: 'users',\n\tuseFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\nconst rrfProps = {\n\tfirebase,\n\tconfig: rrfConfig,\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t\t<App />\n\t\t\t</ReactReduxFirebaseProvider>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}