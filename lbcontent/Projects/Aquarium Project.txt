8##STEP_1####INST_1##Overview\n=====\n\nIn this project we will be creating an animated aquarium with HTML and CSS alone!\n\nThere will be heavy use of *@keyframes* rules and the *animation* property, are you ready?\n=====\nClick Next Step to get started##INST_1E####CODE_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####TEST_1####TEST_1E####STEP_1E####STEP_2####INST_2##Setting up the page - aquarium container\n=====\n\nFirst thing first, let's create the structure of our page.\n\nMost aquariums are rectangular, the <div> element is perfect for this.\n[HTML LINE ##LINE('index.html','ADD AQUARIUM')##]\n1. Create a *<div>* element\n2. Add the *id* attribute and set it to *container*\n=====\nClick Next Step to proceed##INST_2E####CODE_2####HTML###BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD AQUARIUM CONTAINER*/##HTML_E####CSS####CSS_E####JS####JS_E####CODE_2E####TEST_2####TEST_2E####STEP_2E####STEP_3####INST_3##Setting up the page - container styling\n=====\n\nSince <div> elements are invisible by default, let's style it so we can see it.\n[CSS LINE ##LINE('style.css','ADD SELECTOR')##]\nAdd selector to target *#container*\n[CSS LINE ##LINE('style.css','ADD BORDER')##]\nCreate a *solid* border *5px* thick and *black* in color\n[CSS LINE ##LINE('style.css','ADD WIDTH')## - ##LINE('style.css','ADD HEIGHT')##]\nMake it *80%* in *width* and *500px* in *height*\n[CSS LINE ##LINE('style.css','BACKGROUND IMAGE')##]\nUse an image as the background\n[CSS LINE ##LINE('style.css','BACKGROUND SIZE')##]\nMake the background image *cover* the entire <div>\n=====\nClick Next Step to proceed##INST_3E####CODE_3####HTML####HTML_E####CSS###BEGIN_EDITABLE#     #END_EDITABLE# {		/* ADD SELECTOR */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD BORDER */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD WIDTH */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD HEIGHT */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD BACKGROUND IMAGE */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD BACKGROUND SIZE */\n}##CSS_E####JS####JS_E####CODE_3E####TEST_3####TEST_3E####STEP_3E####STEP_4####INST_4##Setting up the page - rows of fish\n=====\n\nWe want the fish to swim across the aquarium back and forth horizontally, this can also be done with the <div> elements.\n[HTML LINE ##LINE('index.html','<div')+1## - ##LINE('index.html','<div')+2##]\n1. Add *two* more <div> elements nested under #container\n2. Add the *class* attribute to both and set it to *row*\n=====\nClick Next Step to prceed##INST_4E####CODE_4####HTML##<div id='container'>\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD ROW */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD ROW */\n</div>##HTML_E####CSS####CSS_E####JS####JS_E####CODE_4E####TEST_4####TEST_4E####STEP_4E####STEP_5####INST_5##Setting up the page - row styling\n=====\n\nAlthough the *.row* elements are only there to contain the fish, but we want to see them visually so we know where they are.\n[CSS LINE ##LINE('style.css','ADD SELECTOR')##]\nAdd selector to target *.row*\n[CSS LINE ##LINE('style.css','ADD WIDTH')##, ##LINE('style.css','ADD HEIGHT')##]\nMake it *100%* in *width* and *20%* in *height*\n[CSS LINE ##LINE('style.css','ADD SELECTOR')##]\nAdd a *top margin* of *15%*\n=====\nClick Next Step to proceed\n##INST_5E####CODE_5####HTML####HTML_E####CSS##.row {		/* ADD SELECTOR */\n	border: solid crimson 1px;		/* ADD BORDER */\n	width: 100%;		/* ADD WIDTH */\n	height: 20%;		/* ADD HEIGHT */\n	margin-top: 15%;	/* ADD MARGIN */\n}##CSS_E####JS####JS_E####CODE_5E####TEST_5####TEST_5E####STEP_5E####STEP_6####INST_6##Setting up the page - the fish\n=====\n\nWithin each row, we want to add one fish.\n\nYou guessed it, the <div> element will do.\n[HTML LINE ##LINE('index.html','container')+2##, ##LINE('index.html','container')+5##]\n1. Add a <div> nested under each .row element\n2. Add the *class* attribute to the first <div> and set it to *guppy fish*\n3. Add the *class* attribute to the second <div> and set it to *clownfish fish*\n=====\nClick Next Step to proceed##INST_6E####CODE_6####HTML##<div id='container'>\n	<div class='row'>\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD FISH */\n	</div>\n	<div class='row'>\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* ADD FISH */\n	</div>\n</div>##HTML_E####CSS####CSS_E####JS####JS_E####CODE_6E####TEST_6####TEST_6E####STEP_6E####STEP_7####INST_7##Setting up the page - styling the fish\n=====\n\nAs always, the <div> elements are empty, let's give them some style.\n[CSS LINE ##LINE('style.css','.guppy')##, ##LINE('style.css','.clownfish')##]\nGive each fish a *background image* matching their names\n\nNow we need to control how they are displayed on the page\n[CSS LINE ##LINE('style.css','ADD SELECTOR')##]\nAdd selector to target *.fish*\n[CSS LINE ##LINE('style.css','BACKGROUND SIZE')##]\nAdd *background-size* property and set it to *contain*\n[CSS LINE ##LINE('style.css','BACKGROUND REPEAT')##]\nAdd *background-repeat* and set it to *no-repeat*\n[CSS LINE ##LINE('style.css','ADD WIDTH')## - ##LINE('style.css','ADD HEIGHT')##]\nSet both *width* and *height* to *15%*\n[CSS LINE ##LINE('style.css','ADD POSITION')##]\nGive them *absolute position*\n=====\nClick Next Step to proceed##INST_7E####CODE_7####HTML####HTML_E####CSS##.fish {		/* ADD SELECTOR */\n    background-size: contain;		/* BACKGROUND SIZE */\n    background-repeat: no-repeat;	/* BACKGROUND REPEAT */\n    width: 15%;		/* ADD WIDTH */\n    height: 15%;	/* ADD HEIGHT */\n    position: absolute;		/* ADD POSITION */\n}\n\n.guppy {\n    background-image: url("http://natgeo.petsmart.com/img/guppy/1700/map-layer-f.png");		/* ADD BACKGROUND IMAGE */\n}\n\n.clownfish {\n    background-image: url("http://vignette4.wikia.nocookie.net/zt2downloadlibrary/images/8/8b/ClownFish_Zerosvalmont.png/revision/latest?cb=20150131200635");		/* ADD BACKGROUND IMAGE */\n}\n\n##CSS_E####JS####JS_E####CODE_7E####TEST_7####TEST_7E####STEP_7E####STEP_8####INST_8##Animation - keyframes\n=====\n\nIn order for the fish to move, we need to define key frames for them. They key frames must define the full motion of the fish, from beginning to end.\n\nIt also needs to loop perfectly, meaning when the animation has finished playing, the fish should be where it started, so when the animation is repeated once more, the motion is maintained seamlessly.\n\nLet's do it one step at a time, starting with the beginning and end frames\n[CSS LINE ##('style.css','ADD KEYFRAMES')##]##INST_8E####CODE_8####HTML####HTML_E####CSS##@keyframes swim {		/* ADD KEYFRAMES RULE */\n    0% {\n        left: 0px;\n        transform: scaleX(-1);\n    }\n    100% {\n        left: 0%;\n        transform: scaleX(-1);\n    }\n}##CSS_E####JS####JS_E####CODE_8E####TEST_8####TEST_8E####STEP_8E##