4##STEP_1####INST_1##Overview\n=====\n\n-----\nPre-requisite\nCSS Propert - position\n-----\n\nThe web page is a 2D plane, and just like the world map, a coordinate ( grid ) system is needed so we know where is what.\n[world coordinate system pic]\n\nBut having a grid is not enough, we also need a way to navigate ( move through ) the grid.\n\nYou'll learn exactly that in this sprint.\n=====\nClick Next Step to get started##INST_1E####CODE_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####TEST_1####TEST_1E####STEP_1E####STEP_2####INST_2##Grid origins - 1/2\n=====\n\nMost grid systems need an origin - the vantage point from which distance is measured, the web grid system is one of them.\n\nBut on a web page, there are two origins:\n-----\nOne at the top left corner and one at the bottom right corner\n[web grid system pic]\nHowever, only one of the two can be active at any given time, we will see why in a moment\n-----\nLet's write some code so we can visualize the output\n-----\nleft: 20px;\ntop: 30px;\n-----\n[CSS LINE ##LINE('style.css','LEFT DISTANCE')##]\nAdd the *left* property and set it to *20px*\n\n[CSS LINE ##LINE('style.css','TOP DISTANCE')##]\nAdd the *top* property and set it to *30px*\n=====\nClick Next Step to proceed##INST_2E####CODE_2####HTML##		<div></div>##HTML_E####CSS##div {\n	position: absolute;\n	width: 200px;\n	height: 200px;\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET LEFT DISTANCE */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET TOP DISTANCE */\n	background: forestgreen;\n}##CSS_E####JS####JS_E####CODE_2E####TEST_2##pass.if.css.editable(0).equivalent('left:20px');\npass.if.css.editable(1).equivalent('top:30px');##TEST_2E####STEP_2E####STEP_3####INST_3##Grid origins - 2/2\n=====\n\nLet's break down what we have done:\n-----\nleft: 20px\nTells the <div> to maintain a 20px distance away from the left boundary of the page\ntop: 30px\nTells the <div> to maintain a 30px distance away from the top boundary of the page\nHere we are using the *top left corner* of the page as the origin\nResize the output window and you will see those distances are maintained\n-----\n\nLet's try using the *bottom right* corner as origin\n[CSS LINE ##LINE('style.css','RIGHT DISTANCE')##]\nAdd the *right* property and set it to *15px*\n\n[CSS LINE ##LINE('style.css','BOTTOM DISTANCE')##]\nAdd the *bottom* property and set it to *25px*\n=====\nClick Next Step to proceed##INST_3E####CODE_3####HTML####HTML_E####CSS##div {\n	position: absolute;\n	width: 200px;\n	height: 200px;\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET RIGHT DISTANCE */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET BOTTOM DISTANCE */\n	background: forestgreen;\n}##CSS_E####JS####JS_E####CODE_3E####TEST_3##pass.if.css.editable(0).equivalent('right:15px');\npass.if.css.editable(1).equivalent('bottom:25px');##TEST_3E####STEP_3E####STEP_4####INST_4##Summary\n=====\n\nOnce again, here's what we've done:\n-----\nright: 15px\nTells the <div> to maintain a 15px distance away from the right boundary of the page\nbottom: 25px\nTells the <div> to maintain a 25px distance away from the bottom boundary of the page\n-----\n\nNow we can clearly see:\n-----\nAn element *can not* be 15px away from the right boundary *and* 20px away from the left boundary *at the same time*\nThe same applies to *top* and *bottom*\n-----\nDo:\n[code pic]\nDon't:\n[code pic]\n=====\nThat's it for the left, right, top and bottom properties, we're sure you will find many uses for them in your own projects.##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_4E####TEST_4####TEST_4E####STEP_4E##