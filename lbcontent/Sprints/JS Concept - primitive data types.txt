8##STEP_1####INST_1##Overview%0A%0A(*)Make%20sure%20you%20understand%20how%20to%20create%20a%20variable%20before%20starting%20this%20sprint%0AIn%20JavaScript,%20every%20variable%20you%20create%20has%20a%20type,%20and%20each%20type%20has%20its%20own%20set%20of%20rules%20on%20what%20you%20can%20do%20with%20it.%0Abr%0AThere%20are%20two%20general%20categories%20of%20data%20types:%20//primitive//%20and%20//complex//.%20In%20this%20sprint,%20we%20will%20focus%20on%20the%20primitive%20types.%0Abr%0APrimitive%20(%20simple%20)%20data%20types%20in%20JavaScript%20include:%0A(**)Number%0A(**)String%0A(**)Boolean%0A(**)undefined##INST_1E####CODE_1####HTML##%3C!DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%09%3Clink%20rel=%22stylesheet%22%20type=%22text/css%22%20href=%22style.css%22/%3E%0A%09%3Cscript%20type=%22text/javascript%22%20src=%22script.js%22%3E%3C/script%3E%0A%3C/head%3E%0A%3Cbody%3E%0A%09%0A%3C/body%3E%0A%3C/html%3E##HTML_E####CSS####CSS_E####JS##console.log();##JS_E####CODE_1E####LOGIC_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_1E####STEP_1E####STEP_2####INST_2##Numbers:%20integer%20&%20float%0A%0AThe%20most%20essential%20and%20common%20data%20type%20is%20the%20number%20data%20type.%0Abr%0AA%20number%20can%20be%20either%20an%20//integer//%20or%20a%20//float//:%0A(*)//interger//:%20whole%20numbers%20without%20decimal%20places.%20e.g.%201,%202,%203,%204,%205...%0A(*)//float//:%20numbers%20with%20decimal%20places.%20e.g.%203.14,%201.12,%209.87...%0A%0ATo%20create%20a%20variable%20with%20the%20number%20type,%20simply%20provide%20the%20value%20on%20the%20right%20side%20of%20the%20equal%20sign%20(%20=%20).%0A(*)var%20x%20=%2010;%0A%0A##script.js##integer##%0A(!)Create%20an%20integer%20number%20variable%20called%20%5B%7Bx%7D%5D%20with%20a%20value%20of%20%5B%7B2%7D%5D%0A%0A##script.js##float##%0A(!)Create%20a%20float%20number%20variable%20called%20%5B%7By%7D%5D%20with%20a%20value%20of%20%5B%7B3.14%7D%5D##INST_2E####CODE_2####HTML####HTML_E####CSS####CSS_E####JS##var%20x%20=%202;%20%20%20%20%20%20//%20integer%0Avar%20y%20=%203.14;%20%20%20%20%20%20%20//%20float##JS_E####CODE_2E####LOGIC_2####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_2E####STEP_2E####STEP_3####INST_3##String%0A%0AThe%20string%20data%20type%20is%20used%20to%20store%20text%20information.%0Abr%0ATo%20create%20a%20variable%20with%20the%20string%20type,%20provide%20the%20text%20on%20the%20right%20side%20of%20the%20equal%20sign%20(%20=%20).%0A(*)var%20str%20=%20%22any%20text%22;%0A(*)var%20str%20=%20'any%20text';%0A(*)//Note//:%20the%20text%20must%20be%20wrapped%20in%20//matching%20quotation%20marks//.%0A%0A##script.js##string##%0A(!)Create%20a%20string%20variable%20called%20%5B%7Btext%7D%5D%20with%20the%20value%20of%20%5B%7B%22hello%22%7D%5D##INST_3E####CODE_3####HTML####HTML_E####CSS####CSS_E####JS##var%20x%20=%202;%20%20%20%20%20%20//%20integer%0Avar%20y%20=%203.14;%20%20%20%20%20%20%20//%20float%0A%0Avar%20text%20=%20'hello';%20%20%20%20%20//%20string##JS_E####CODE_3E####LOGIC_3####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_3E####STEP_3E####STEP_4####INST_4##Boolean%0A%0AThe%20Boolean%20(%20always%20capitalised%20)%20data%20type%20is%20used%20to%20store%20logical%20information,%20namely%20//true//%20or%20//false//.%0Abr%0AThink%20of%20this%20data%20type%20like%20a%20switch,%20it's%20either%20on%20(%20true%20)%20or%20off%20(%20false%20).%0Abr%0ATo%20create%20a%20variable%20with%20the%20Boolean%20type,%20provide%20either%20//true//%20or%20//false//%20on%20the%20right%20side%20of%20the%20equal%20sign%20(%20=%20).%0A%0A##script.js##Boolean##%0A(!)Create%20a%20Boolean%20variable%20called%20%5B%7Blogic%7D%5D%20with%20the%20value%20of%20%5B%7Btrue%7D%5D##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS##var%20x%20=%202;%20%20%20%20%20%20//%20integer%0Avar%20y%20=%203.14;%20%20%20%20%20%20%20//%20float%0A%0Avar%20text%20=%20'hello';%20%20%20%20%20//%20string%0A%0Avar%20logic%20=%20true;%20%20%20%20%20%20%20//%20Boolean##JS_E####CODE_4E####LOGIC_4####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_4E####STEP_4E####STEP_5####INST_5##Getting%20the%20type%20of%20a%20variable%0A%0ASometimes%20it%20may%20not%20be%20immediately%20obvious%20what%20type%20a%20variable%20is,%20and%20this%20can%20be%20a%20problem.%0Abr%0ALuckily%20there%20is%20a%20built-in%20function%20to%20get%20that%20information.%0A%0A(**)typeof(variable_name);%0A%0AThis%20function%20will%20return%20the%20name%20of%20a%20variable's%20type,%20you%20can%20use%20it%20with%20//console.log()//%20to%20visualise%20it.%0A%0A(**)console.log(typeof(variable_name));%0A%0A##script.js##print##%0A(!)1.%20Use%20the%20%5B%7Btypeof()%7D%5D%20function%20to%20get%20the%20type%20of%20variable%20%5B%7Blogic%7D%5D%0A(!)2.%20Use%20the%20%5B%7Bconsole.log()%7D%5D%20function%20to%20visualise%20that%20information%0A(*)Learn%20more%20about%20the%20console%20function%20here::https://app.bsdlaunchbox.com/sprint/js-debugging---consolelog##INST_5E####CODE_5####HTML####HTML_E####CSS####CSS_E####JS##var%20x%20=%202;%20%20%20%20%20%20//%20integer%0Avar%20y%20=%203.14;%20%20%20%20%20%20%20//%20float%0A%0Avar%20text%20=%20'hello';%20%20%20%20%20//%20string%0A%0Avar%20logic%20=%20true;%20%20%20%20%20%20%20//%20Boolean%0A%0Aconsole.log(typeof(logic));%20%20%20%20%20//%20print%20variable%20type##JS_E####CODE_5E####LOGIC_5####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_5E####STEP_5E####STEP_6####INST_6##Dynamic%20typing%0A%0AData%20types%20in%20JavaScript%20are%20dynamic.%20This%20means%20a%20variable%20will%20automatically%20change%20its%20type%20to%20match%20that%20of%20the%20value%20last%20assigned%20to%20it.%0Abr%0AFor%20example,%20in%20the%20following%20code:%0A(*)var%20myVar%20=%20125;%0A(*)myVar%20=%20%22some%20text%22;%0A(*)myVar%20=%20false;%0A(*)console.log(typeof(myVar));%0A%0AThe%20variable%20//myVar//%20has%20the%20//Number//%20type%20in%20the%201st%20line,%20//String//%20type%20in%20the%202nd%20line%20and%20//Boolean//%20type%20in%20the%203rd%20line.%20And%20on%20the%204th%20line,%20we%20would%20see%20%22Boolean%22%20printed%20in%20the%20console.%0A%0A##script.js##type%20of%20myVar##%0A(!)Fill%20the%20blank%20space%20with%20the%20%5B%7Btype%7D%5D%20of%20variable%20%5B%7BmyVar%7D%5D##INST_6E####CODE_6####HTML##%3C!DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%09%3Clink%20rel=%22stylesheet%22%20type=%22text/css%22%20href=%22style.css%22/%3E%0A%09%3Cscript%20type=%22text/javascript%22%20src=%22script.js%22%3E%3C/script%3E%0A%3C/head%3E%0A%3Cbody%3E%0A%09%3Ch1%20id=%22result%22%3E%3C/h1%3E%0A%3C/body%3E%0A%3C/html%3E##HTML_E####CSS###result%20%7B%0A%20%20%20%20font-family:%20arial;%0A%20%20%20%20text-align:%20center;%0A%20%20%20%20margin-top:%20100px;%0A%7D##CSS_E####JS##var%20result%20=%20document.getElementById('result');%0Avar%20myVar%20=%20'Hello';%0Avar%20varType;%0A%0AmyVar%20=%20120%20-%2025;%0A%0AmyVar%20=%20false;%0A%0AmyVar%20=%20'tru'%20+%20'e';%0A%0AvarType%20=%20'string';%20%20%20%20%20%20%20%20//%20type%20of%20myVar%0A%0Aif%20(typeof(myVar)%20==%20varType.trim())%20%7B%0A%20%20%20%20result.innerHTML%20=%20'Correct!';%0A%7D%20else%20%7B%0A%20%20%20%20result.innerHTML%20=%20'What%20is%20the%20type%20of%20myVar?';%0A%7D##JS_E####CODE_6E####LOGIC_6####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_6E####STEP_6E####STEP_7####INST_7##Undefined%20type%0A%0AA%20variable%20may%20not%20always%20have%20a%20value,%20in%20which%20case%20it%20is%20//undefined//.%0Abr%0AA%20variable%20with%20this%20type%20is%20unique%20in%20that,%20both%20its%20value%20and%20type%20will%20return%20undefined.%20For%20example:%0A%0A(**)var%20myVar;%0A%0AThe%20variable%20//myVar//%20is%20created%20without%20being%20given%20a%20value.%0A%0A(*)console.log(myVar);%0A(*)console.log(typeof(myVar));%0A%0AAnd%20both%20lines%20in%20the%20above%20code%20will%20print%20out%20//undefined//%20in%20the%20console.%0A%0A##script.js##undefined%20variable##%0A(!)Fill%20the%20blank%20space%20with%20%5B%7Bname%20of%20the%20variable%7D%5D%20that%20is%20%5B%7Bundefined%7D%5D##INST_7E####CODE_7####HTML##%3C!DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%09%3Clink%20rel=%22stylesheet%22%20type=%22text/css%22%20href=%22style.css%22/%3E%0A%09%3Cscript%20type=%22text/javascript%22%20src=%22script.js%22%3E%3C/script%3E%0A%3C/head%3E%0A%3Cbody%3E%0A%09%3Ch1%3E%3Cspan%20id='result'%3E_______%3C/span%3E%20is%20an%20empty%20variable%3C/h1%3E%0A%3C/body%3E%0A%3C/html%3E##HTML_E####CSS##h1%20%7B%0A%20%20%20%20font-family:%20Arial;%0A%20%20%20%20margin-top:%20100px;%0A%20%20%20%20text-align:%20center;%0A%7D%0A%0A#result%20%7B%0A%20%20%20%20text-decoration:%20underline;%0A%7D##CSS_E####JS##var%20result%20=%20document.getElementById('result');%0Avar%20emptyVar;%0A%0Avar%20varOne;%0Avar%20varTwo%20=%2012;%0Avar%20varThree%20=%20'Code';%0A%0AvarThree%20=%20varOne;%0A%0AvarTwo%20=%20false;%0A%0AvarOne%20=%20'undefined';%0A%0AemptyVar%20=%20'varThree';%20%20%20%20%20%20%20%20//%20undefined%20variable%20name%0A%0Aresult.innerHTML%20=%20emptyVar.trim();##JS_E####CODE_7E####LOGIC_7####HTML##//%20use%20new%20content##HTML_E####CSS##//%20use%20new%20content##CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_7E####STEP_7E####STEP_8####INST_8##Summary%0A%0AWell%20done!%0Abr%0AApply%20what%20you%20learned%20here%20in%20your%20own%20projects.##INST_8E####CODE_8####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_8E####LOGIC_8####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_8E####STEP_8E##