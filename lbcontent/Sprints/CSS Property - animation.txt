4##STEP_1####INST_1##Overview\n=====\n\nAnimation is great, there is not much else to it.\n\nIdle websites can look good and provide great user experience, but the added visuals can make your website exciting for the viewers.\n\nIn this sprint, we will learn how to apply animation to the elements on your page.\n=====\nClick Next Step to get started##INST_1E####CODE_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####TEST_1####TEST_1E####STEP_1E####STEP_2####INST_2##The syntax - 1/2\n=====\n\nOne thing to note before we get started, the *animation* property does not actually create any animation, it only applies animation to the targeted elements, understanding this will help you remember the syntax.\n\n-----\nanimation: name duration iteration;\nname - the name of an animation created in a *@keyframes* rule\nduration - time in seconds the animation will take to complete one play through\niteration - integer defining the number of times the animation will loop\n-----\n\nLet's write the rule in our stylesheet\n[CSS LINE ##LINE('style.css','ADD KEYFRAMES')##]\n1. Add a rule to define key frames\n2. Set the *name* to *anim*\n3. Set the *duration* to *3s*\n4. Set the *iteration* to *2*\n\n=====\nClick Next Step to proceed\n##INST_2E####CODE_2####HTML####HTML_E####CSS###circle {	\n	border-radius: 50%;\n	background: crimson;\n	#BEGIN_EDITABLE#     #BEGIN_EDITABLE#		/* ADD KEYFRAMES RULE */\n}\n\ndiv {\n	position: absolute;\n	width: 100px; height: 100px;\n	left: 0;\n}\n\n@keyframes anim {\n	0% {\n		left: 0;\n	}\n	50% {\n		left: 100px;\n	}\n	100% {\n		left: 0;\n	}\n}##CSS_E####JS####JS_E####CODE_2E####TEST_2####TEST_2E####STEP_2E####STEP_3####INST_3##The syntax - 2/2\n=====\n\nThere are more ways we can control the playback of this animation, one of them is called *delay*, and the syntax is:\n\n-----\nanimation: name duration delay iteration;\ndelay - time in seconds it takes before the animation begins playback\n-----\n\nTo visualize this better, we have added another shape to the page\n[CSS LINE ##LINE('style.css','ADD KEYFRAMES')##]\n1. Add a rule to define key frames\n2. Set the *name* to *anim*\n3. Set the *duration* to *1s*\n4. Set the *delay* to *2s*\n5. Set the *iteration* to *infinite*\n\n=====\nClick Next Step to proceed##INST_3E####CODE_3####HTML####HTML_E####CSS###circle {\n	border-radius: 50%;\n	background: crimson;\n	animation: anim 3s 2;\n}\n\n#square {\n	top: 150px;\n	border-radius: 25%;\n	background: skyblue;\n	#BEGIN_EDITABLE#     #BEGIN_EDITABLE#		/* ADD KEYFRAMES RULE */\n}\n\ndiv {\n	position: absolute;\n	width: 100px; height: 100px;\n	left: 0;\n}\n\n@keyframes anim {\n	0% {\n		left: 0;\n	}\n	50% {\n		left: 100px;\n	}\n	100% {\n		left: 0;\n	}\n}##CSS_E####JS####JS_E####CODE_3E####TEST_3####TEST_3E####STEP_3E####STEP_4####INST_4##Summary\n=====\n\nGreat job, you have learned how to apply animation!\n\nAs you can see, even though both shapes are given the same animation, but the final result look quite different because of the values of the *animation property* are different.##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_4E####TEST_4####TEST_4E####STEP_4E##