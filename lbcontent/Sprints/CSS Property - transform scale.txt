4##STEP_1####INST_1##Overview\n=====\n\nThe *transform* property in CSS is used to manipulate elements in a number of ways, in this sprint we will focus on the *scaling* ( resizing ) of elements.\n\nIf you're thinking "but can't we already resize elements with *width* and *height*?", you'd be right, we can.\n\nThe use of the transform property is not aimed at replacing the width and height properties, but to provide additional features that can speed up the coding process in some situations.\n=====\nClick Next Step to get started##INST_1E####CODE_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####TEST_1####TEST_1E####STEP_1E####STEP_2####INST_2##The syntax\n=====\n\nThe transform property is one of the more complex properties in CSS in terms of syntax.\n\nFor example\n-----\nThe *width* property can only have a value that defines number of pixels\nEven if you use the percentage format ( e.g. 10% ), it still just means 10% of the parent width *in pixels*\n-----\nBut the transform property has a *list of functions*, from which we *need to specify one* before giving that function a value.\n\nHere is the syntax for the transform property along with its scale function:\n-----\ntransform: scale(xSize, ySize);\n-----\nSee that clock in the output window, let's transform its scale and visualize the output\n[CSS LINE ##LINE('style.css','THE SCALE')##]\n1. Add the rule to transform scale\n2. Set the *scale* values to *(-1, 1)*\n=====\nClick Next Step to proceed##INST_2E####CODE_2####HTML##<!DOCTYPE html>\n<html>\n    <head>\n        <link rel="stylesheet" type="text/css" href="style.css"/>\n        <script type="text/javascript" src="script.js"></script>\n    </head>\n    <body>\n        <div></div>\n    </body>\n</html>##HTML_E####CSS##div {\n	margin: 0 auto;\n	width: 300px;\n	height: 300px;	\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* TRANSFORM THE SCALE */\n	background: url('http://bsdacademysandbox.com/curriculum/wp-content/uploads/2017/04/clock.gif');\n	background-size: cover;\n}##CSS_E####JS####JS_E####CODE_2E####TEST_2##pass.if.css.editable(0).equivalent('transform:scale(-1,1)');##TEST_2E####STEP_2E####STEP_3####INST_3##Syntax variation\n=====\n\nThe clock is ticking in reverse! Let's break down what we just did:\n-----\ntransform: scale(-1, 1)\nThe *scale function* accepts two values: *x* and *y* ( *horizontal* and *vertical* )\nEach value represents a percentage: 1 = 100%, 0.82 = 82%, etc...\n-----\nWe don't have negative sizes in the real world, but your page lives in the virtual world and the rules are different there.\n-----\nHere is an animation to help you understand *negative size*\n[gif]\nA negative size essentially flips the target\n-----\nAs you can see the in animation above, the scale function can be defined separately:\n-----\n*transform: scaleX(value)* and *transform: scaleY(value)*\n-----\n[CSS LINE ##LINE('style.css','IN X')##]\n1. Modify the rule to transform scale only in x\n2. Use any value\n[CSS LINE ##LINE('style.css','IN Y')##]\n1. Add a rule to transform scale in y\n2. Use any value\n=====\nClick Next Step to proceed##INST_3E####CODE_3####HTML####HTML_E####CSS##div {\n	margin: 0 auto;\n	width: 300px;\n	height: 300px;	\n	#BEGIN_EDITABLE# transform: scale(-1,1); #END_EDITABLE#		/* TRANSFORM SCALE IN X */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* TRANSFORM SCALE IN Y */\n	background: url('http://bsdacademysandbox.com/curriculum/wp-content/uploads/2017/04/clock.gif');\n	background-size: cover;\n}##CSS_E####JS####JS_E####CODE_3E####TEST_3##pass.if.css.editable(0).equivalent('transform: scaleX(##ANY##)');\npass.if.css.editable(1).equivalent('transform: scaleY(##ANY##)');##TEST_3E####STEP_3E####STEP_4####INST_4##Summary\n=====\n\nThat's it for transform scale.\n\nRemember the scale function is just one of many, make sure to check out the other ones to make full use of the transform property.##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_4E####TEST_4####TEST_4E####STEP_4E##