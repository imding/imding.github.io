4##STEP_1####INST_1##Overview%0A%0AVariable%20scoping%20is%20a%20very%20important%20concept%20in%20JavaScript,%20understanding%20it%20can%20make%20your%20code%20more%20concise%20and%20efficient.%0Abr%0AIn%20this%20sprint,%20you%20will%20learn%20to%20understand%20the%20difference%20between%20global%20and%20local%20variables.##INST_1E####CODE_1####HTML##%3C!DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%09%3Clink%20rel=%22stylesheet%22%20type=%22text/css%22%20href=%22style.css%22/%3E%0A%09%3Cscript%20type=%22text/javascript%22%20src=%22script.js%22%3E%3C/script%3E%0A%3C/head%3E%0A%3Cbody%3E%0A%09%0A%3C/body%3E%0A%3C/html%3E##HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####LOGIC_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_1E####STEP_1E####STEP_2####INST_2##Global%20variables%0A%0AA%20global%20variable%20is%20created%20outside%20of%20all%20functions,%20and%20you%20can%20use%20it%20anywhere%20in%20your%20code.%0Abr%0AIn%20the%20script%20file,%20you%20can%20see%20the%20variable%20//globalVar//%20was%20created%20and%20given%20the%20value%20//%22I%20exist%20everywhere%22//,%20this%20global%20variable%20is%20then%20used%20inside%20//myFunction()//%20when%20it%20is%20called%20at%20//LINE%208//.%20Look%20in%20the%20console%20tab%20and%20you%20will%20see%20the%20variable's%20value.%0Abr%0AGo%20ahead%20and%20make%20another%20global%20variable.%0A%0A##script.js##global%20variable##%0A(!)Create%20a%20global%20variable%20called%20%5B%7BmyGlobalVar%7D%5D%0A(*)Learn%20more%20about%20creating%20variables%20here::https://app.bsdlaunchbox.com/sprint/variables%0A(!)Give%20it%20any%20value%20using%20the%20equal%20sign%20(%20=%20)%0A%0ABefore%20moving%20to%20the%20next%20step,%20run%20your%20code%20and%20take%20a%20look%20in%20the%20console%20tab%20to%20see%20the%20value%20of%20the%20newly%20created%20global%20variable.##INST_2E####CODE_2####HTML####HTML_E####CSS####CSS_E####JS##var%20globalVar%20=%20'I%20exist%20everywhere';%0A//%20another%20global%20variable%0A%0Afunction%20myFunction()%20%7B%0A%20%20%20%20console.log(globalVar);%0A%7D%0A%0AmyFunction();##JS_E####CODE_2E####LOGIC_2####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_2E####STEP_2E####STEP_3####INST_3##Local%20variables%0A%0AIf%20a%20variable%20isn't%20a%20global%20variable,%20then%20it%20is%20//local//.%20Meaning%20it%20is%20only%20usable%20inside%20the%20function%20it%20was%20created%20in.%0Abr%0AOn%20//JS%20LINE%204//%20a%20variable%20called%20//localVar//%20is%20created%20inside%20//myFunction()//%20and%20therefore%20is%20local%20to%20it%20(%20the%20computer%20only%20knows%20the%20value%20of%20//localVar//%20inside%20//myFunction()//%20).%0Abr%0ALook%20at%20the%20//console%20tab//%20and%20you%20will%20see%20the%20type%20of%20//localVar//%20is%20//undefined//%20because%20//console.log()//%20is%20called%20//outside%20myFunction()//.%0A(*)Learn%20more%20about%20the%20undefined%20data%20type%20here::https://app.bsdlaunchbox.com/sprint/js-concept---primitive-data-types%0A%0A##script.js##local%20variable##%0A(!)Use%20%5B%7Bconsole.log()%7D%5D%20to%20log%20the%20value%20of%20%5B%7BlocalVar%7D%5D%20inside%20myFunction()%0A(!)Delete%20code%20on%20%5B%7BLINE%2011%7D%5D%0A%0AAfter%20moving%20//console.log()//%20into%20//myFunction()//,%20the%20value%20of%20//localVar//%20is%20now%20accessible%20and%20logged%20to%20console.##INST_3E####CODE_3####HTML####HTML_E####CSS####CSS_E####JS##var%20globalVar%20=%20'I%20exist%20everywhere';%0A%0Afunction%20myFunction()%20%7B%0A%20%20%20%20var%20localVar%20=%20'I%20only%20exist%20inside%20myFunction()';%0A%20%20%20%20%0A%20%20%20%20//%20log%20local%20variable%0A%7D%0A%0AmyFunction();%0A%0Aconsole.log(typeof(localVar));%20%20%20%20%20%20//%20delete##JS_E####CODE_3E####LOGIC_3####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_3E####STEP_3E####STEP_4####INST_4##Summary%0A%0AWell%20done!%0Abr%0AApply%20what%20you%20learned%20in%20your%20own%20projects.##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_4E####LOGIC_4####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_4E####STEP_4E##