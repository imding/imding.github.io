5##STEP_1####INST_1##Overview%0A%0ANormally%20we%20only%20store%20one%20thing%20in%20a%20variable,%20for%20example,%20%60var%20num%20=%2042%60%20creates%20a%20variable%20called%20*num*%20and%20stores%20the%20number%20*42*,%20%60var%20str%20=%20%22hello%22%60%20creates%20a%20variable%20called%20*str*%20and%20stores%20the%20string%20*%22hello%22*,%20etc...%0A%0A*Array*%20is%20a%20type%20of%20variable%20that%20can%20store%20many%20items%20in%20a%20sequence,%20and%20allows%20you%20to%20access%20each%20item%20easily%20by%20using%20something%20called%20*index*.%0A%0AIn%20this%20sprint,%20you%20will%20learn%20how%20to%20create%20an%20array%20and%20access%20each%20item%20in%20it.##INST_1E####CODE_1####HTML##%3C!DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%09%3Clink%20rel=%22stylesheet%22%20type=%22text/css%22%20href=%22style.css%22/%3E%0A%09%3Cscript%20type=%22text/javascript%22%20src=%22script.js%22%3E%3C/script%3E%0A%3C/head%3E%0A%3Cbody%3E%0A%09%0A%3C/body%3E%0A%3C/html%3E##HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####LOGIC_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_1E####STEP_1E####STEP_2####INST_2##Array%20syntax%0A%0AArrays%20are%20known%20as%20*objects*%20in%20JavaScript,%20they%20can%20contain%20any%20other%20*primitive%20data%20types*%20such%20as%20numbers%20and%20strings.%20%0A(*)Learn%20more%20about%20primitive%20data%20types%20%5Bhere::https://app.bsdlaunchbox.com/sprint/js-concept---primitive-data-types%5D%0A%0AThe%20following%20sample%20code%20creates%20an%20array%20called%20*countries*%20with%203%20items:%0A%0A(js)var%20countries%20=%20%5B%22Spain%22,%20%22Canada%22,%20%22Iceland%22%5D;(#)%0A%5B-%0A%09(*)use%20keyword%20%60var%60%20to%20create%20an%20array%20just%20like%20any%20other%20variable%0A%09(*)put%20all%20array%20items%20between%20*square%20brackets*%0A%09(*)separate%20array%20items%20with%20the%20*comma%20symbol*%0A-%5D%0A%0A(***)%0A%0A(!)On%20+js#first%20array#,%20create%20an%20array%20called%20*numbers*%20that%20contains%20the%20following%20numbers:%0A(*)12,%2045,%2032,%2087,%20102##INST_2E####CODE_2####HTML####HTML_E####CSS####CSS_E####JS###BEGIN_EDITABLE#%20var%20numbers%20=%20%5B12,%2045,%2032,%20102%5D;%20#END_EDITABLE#%20%20%20%20%20//%20my%20first%20array##JS_E####CODE_2E####LOGIC_2####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content%0A%0A//%20Expectation:%0Apass.if.js.editable(0).equivalent(%60var%20numbers%20=%20%5B12,%2045,%2032,%20102%5D;%60);##JS_E####LOGIC_2E####STEP_2E####STEP_3####INST_3##Array%20index%0A%0AEvery%20item%20in%20an%20array%20has%20an%20*index*%20which%20is%20equal%20to%20the%20number%20of%20items%20before%20it.%20For%20example,%20the%20integer%2032%20in%20*numbers*%20has%202%20items%20before%20it%20-%2012%20and%2045,%20therefore%20it%20has%20an%20index%20of%202.%0A%0AYou%20can%20use%20this%20index%20to%20access%20any%20item%20in%20an%20array%20using%20the%20following%20syntax:%0A%0A(js)arrayName%5Bindex%5D(#)%0A%0A(*)For%20example,%20%60numbers%5B4%5D%60%20will%20give%20you%20the%20integer%20*102*.%0A%0A(***)%0A%0A(!)1.%20On%20+js#var%20numbers#,%20find%20the%20two%20integers%20in%20the%20*numbers*%20array%20that%20*add%20up%20to%20132*%0A(!)2.%20On%20+js#log%20result#,%20fill%20in%20the%20gaps%20so%20*true*%20is%20logged%20to%20the%20console%0A(*)*Tip:*%20use%20the%20%60arrayName%5Bindex%5D%60%20syntax##INST_3E####CODE_3####HTML####HTML_E####CSS####CSS_E####JS##var%20numbers%20=%20%5B12,%2045,%2032,%2087,%20102%5D;%0A%0Aconsole.log(#BEGIN_EDITABLE#%20numbers%5B1%5D%20#END_EDITABLE#%20+%20#BEGIN_EDITABLE#%20numbers%5B3%5D%20#END_EDITABLE#%20==%20132);%20%20%20%20%20//%20log%20result%20to%20console##JS_E####CODE_3E####LOGIC_3####HTML####HTML_E####CSS####CSS_E####JS##//%20Expectation:%0Apass.if.js.editable(0).equivalent(%60numbers%5B1%5D%60);%0Apass.if.js.editable(1).equivalent(%60numbers%5B3%5D%60);##JS_E####LOGIC_3E####STEP_3E####STEP_4####INST_4##Array%20of%20variables%0A%0AAn%20array%20can%20also%20contain%20other%20variables,%20like%20so:%0A%0A(js)var%20arrayName%20=%20%5BvariableName1,%20variableName2%5D;(#)%0A%0AWe%20have%20created%20a%20few%20variables%20for%20you%20on%20+js#var%20num#%20-%20js#var%20bool#,%20your%20task%20is%20to%20put%20them%20all%20into%20an%20array.%0A%0A(***)%0A%0A(!)On%20+js#create%20array#,%20create%20an%20array%20called%20*variables*%20and%20make%20sure%20the%20following%20is%20true:%0A(*)%60variables%5B1%5D%60%20is%20*num*%0A(*)%60variables%5B2%5D%60%20is%20*str*%0A(*)%60variables%5B0%5D%60%20is%20*bool*##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS##var%20num%20=%2042;%0Avar%20str%20=%20'hello';%0Avar%20bool%20=%20false;%0A%0A#BEGIN_EDITABLE#%20var%20variables%20=%20%5Bbool,%20num,%20str%5D;%20#END_EDITABLE#%20%20%20%20%20//%20create%20array##JS_E####CODE_4E####LOGIC_4####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content%0A%0A//%20Expectation:%0Apass.if.js.editable(0).equivalent(%60var%20variables%20=%20%5Bbool,%20num,%20str%5D;%60);##JS_E####LOGIC_4E####STEP_4E####STEP_5####INST_5##Summary%0A%0AWell%20done!%0Abr%0AThere%20are%20many%20JavaScript%20functions%20that%20are%20designed%20to%20work%20with%20arrays,%20make%20sure%20to%20check%20them%20out!##INST_5E####CODE_5####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_5E####LOGIC_5####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_5E####STEP_5E##