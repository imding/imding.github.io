8##STEP_1####INST_1##Overview\n=====\n\nCSS is mostly used to modify the properties of some element, because every element is created with its own list of properties already attached, for example:\n---\n<h1> element is created with its width property set to 100%\n<div> element is created with both width and height set to 0\netc...\n---\nThere are ways we can create new information in CSS, and in this sprint, we will learn how to create animation!\n=====\nClick Next Step to get started##INST_1E####CODE_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####TEST_1####TEST_1E####STEP_1E####STEP_2####INST_2##Animation basics - 1/2\n=====\n\nBefore we code any animation, we must first understand the structure of animation.\n-----\nAnimation is the illusion of movement when a series of images are shown one after another in rapid succession.\n[animation]\nEach picture in the animation is called a *frame*\n-----\n[HTML LINE ##LINE('index.html','1. Animation')##]\nFill the gap with the correct answer:\npaintings\nimages\ncards\n\n[HTML LINE ##LINE('index.html','2. Each')##]\nFill the gap with the correct answer:\nanime\nmovement\nframe\n=====\nClick Next Step to proceed##INST_2E####CODE_2####HTML##<h1>Quiz</h1>\n<h2>1. Animation is created by showing a series of <span>#BEGIN_EDITABLE#     #END_EDITABLE#</span> one after another.</h2>\n<h2>2. Each image in an animations is called a <span>#BEGIN_EDITABLE#     #END_EDITABLE#</span>.</h2>##HTML_E####CSS##span {\n	color: crimson;\n	text-decoration: underline;\n}##CSS_E####JS####JS_E####CODE_2E####TEST_2####TEST_2E####STEP_2E####STEP_3####INST_3##Animation basics - 2/2\n=====\n\nTraditional animation, like the flipbook you just saw, would require you to create every single frame in it.\n-----\nFun fact: a professional Disney animator back in the day could only make 6 seconds of animation in a full working week.\n-----\nBut we have computers, and they can greatly reduce the effort that is required to make animations compared to the traditional way.\n-----\nBy defining only the *key frames* we can let the computer do the in-between frames for us\n[animation]\n-----\n[HTML LINE ##LINE('index.html','<h2>')##]\nFill the gap with the correct answer:\nkeyframes\nframes\nkeypositions\n=====\nClick Next Step to proceed##INST_3E####CODE_3####HTML##<h1>Quiz</h1>\n<h2>With the help of computers, we only need to define #BEGIN_EDITABLE#     #END_EDITABLE# in any animation and the computer will take care of the rest.##HTML_E####CSS###BEGIN_EDITABLE#     #END_EDITABLE#		/* CREATE KEYFRAMES RULE */##CSS_E####JS####JS_E####CODE_3E####TEST_3####TEST_3E####STEP_3E####STEP_4####INST_4##The syntax - 1/2\n=====\n\nTo define key frames, we use the following syntax:\n-----\n@keyframes animation_name {}\n-----\nSince we're creating new information, i.e. not targeting any existing element, the syntax is slightly different from selectors.\n-----\n@keyframes: type of information we are creating\nanimation_name: the name of the animation\n{}: information that will define the key frames will go between the braces\n-----\n[CSS LINE ##LINE('style.css','KEYFRAME RULE')##]\n1. Create a rule for key frames\n2. Give it the animation name *anim*\n=====\nClick Next Step to proceed##INST_4E####CODE_4####HTML####HTML_E####CSS###BEGIN_EDITABLE#     #END_EDITABLE#		/* CREATE KEYFRAME RULE*/##CSS_E####JS####JS_E####CODE_4E####TEST_4####TEST_4E####STEP_4E####STEP_5####INST_5##The syntax - 2/2\n=====\n\nInside the braces, we define the key frames with the following syntax:\n-----\n0% {}	/* STARTING KEY FRAME */\n/* ADDITIONAL KEY FRAMES */\n100% {}	/* END KEY FRAME */\n-----\nEvery animation needs at least *two* keyframes: one at the start ( 0% ) and one at the end ( 100% ) of the animation\nMore complex animations require more key frames\n-----\n[CSS LINE ##LINE('style.css','STARTING')##, ##LINE('style.css','END')##]\nAdd the starting and end key frames\n=====\nClick Next Step to proceed##INST_5E####CODE_5####HTML####HTML_E####CSS##@keyframes anim {\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* STARTING KEY FRAME */\n	#BEGIN_EDITABLE#     #END_EDITABLE#		/* END KEY FRAME */\n}##CSS_E####JS####JS_E####CODE_5E####TEST_5####TEST_5E####STEP_5E####STEP_6####INST_6##Defining each key frame\n=====\n\nLet's do a break-down of what we have done so far:\n-----\nWe created a key frame animation called *anim*\nThis animation has *two* key frames\n-----\nWe have assigned the animation to the blue circle for you, but nothing is animated yet. This is because our key frames are empty, the circle doesn't know what to do at each key frame.\n\nLet's fix that\n[CSS LINE ##LINE('style.css','BLUE */')##]\nSet the background color to *skyblue*\n[CSS LINE ##LINE('style.css','RED')##]\nSet the background color to *crimson*;\n=====\nClick Next Step to proceed##INST_6E####CODE_6####HTML####HTML_E####CSS##@keyframes anim {\n	0% {\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* BLUE */\n	}\n	100% {\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* RED */\n	}\n}##CSS_E####JS####JS_E####CODE_6E####TEST_6####TEST_6E####STEP_6E####STEP_7####INST_7##Additional key frame\n=====\n\nBreak-down:\n-----\nWe created a key frame animation called *anim* with *two* key frames\nThe first key frame sets the background color to *skyblue*\nAnd the second *crimson*\n-----\nAs result, the circle will change its color from *skyblue* to *crimson* completing one cycle of animation\n\nNow let's add one more key frame before we wrap up this sprint.\n[CSS LINE ##LINE('style.css','ADD KEY')##]\nAdd a key frame at *50%* of the animation duration\n[CSS LINE ##LINE('style.css','ADDKEY')+1##]\nSet background color to 'crimson'\n[CSS LINE ##LINE('style.css','ADDKEY')+2##]\nSet scale to 50% with *transform: scale(0.5)*\n[CSS LINE ##LINE('style.css','100%')+1## - ##LINE('style.css','100%')+2##]\nMake sure keyframe 100% matches keyframe 0%\n=====\nClick Next Step to proceed\n\n##INST_7E####CODE_7####HTML####HTML_E####CSS##@keyframes anim {\n	0% {\n		background: skyblue;\n		transform: scale(1);\n	}\n	#BEGIN_EDITABLE#     #END_EDITABLE# {		/* ADD KEY FRAME */\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET BACKGROUND COLOR */\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET SCALE */\n	100% {\n		#BEGIN_EDITABLE# background: crimson; #END_EDITABLE#		/* CHANGE BACKGROUND COLOR */\n		#BEGIN_EDITABLE#     #END_EDITABLE#		/* SET SCALE */\n	}\n}##CSS_E####JS####JS_E####CODE_7E####TEST_7####TEST_7E####STEP_7E####STEP_8####INST_8##Summary\n=====\n\nThat is all you need to know about creating animation.\n\nAs you may have noticed, in order to view the animation we have created, the *@keyframes* rule must be assigned to elements on the page by using the *animation* property, but we will save that for another sprint.##INST_8E####CODE_8####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_8E####TEST_8####TEST_8E####STEP_8E##