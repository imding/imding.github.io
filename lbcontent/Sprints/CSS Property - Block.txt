4##STEP_1####INST_1##Overview\n\nAll HTML elements are one of two types:\n\nBlock elements - always take up a full row of space on the page\n\nIn-line block elements - occupy as little space as possible to allow maximum number of elements to be positioned in the same row\n\nIn this sprint you will learn the default type of various elements and how to switch between types.##INST_1E####CODE_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####TEST_1####TEST_1E####STEP_1E####STEP_2####INST_2##Default type\n\nEvery element has a default type - it is either block or in-line block when you create it.\n\nFor example, the <div> element is a block element by default, it will occupy the entire row even if it doesn't need it. See the output panel for a visual demonstration.\n\nWe can confirm this is true by right-clicking on any of the two <div> and look at its <b>Computed</b> styles, where you will find <b>Display: block</b>\n\n[img: computed]\n\nYou can use this technique to find out the default type of any element.##INST_2E####CODE_2####HTML##<div id='box1'></div>\n<div id='box2'></div>##HTML_E####CSS###box1 {\n    width: 150px; height: 200px;\n    background: skyblue;\n}\n\n#box2 {\n    width: 100px; height: 120px;\n    background: crimson;\n}##CSS_E####JS####JS_E####CODE_2E####TEST_2####TEST_2E####STEP_2E####STEP_3####INST_3##The syntax\n\n<img> elements are in-line block by default, meaning they will share the space with other in-line block elements, as long as there's enough space.\n\nIn the output panel, you can see that we have two images - one with blue outline and one red, expand and shrink the output panel and you will see they dynamically reposition themselves.\n\n[image: resize window]\n\nWe can make them behave like block elements with the following rule:\n\n<p class='notes' style='text-align:center'>display: block;</p>\n\nTry it.\n\n<p class='highlights' style='text-align:center'>[CSS LINE ##('style.css','img {')+1##]<br>Add the <u>display</u> property and set it to <u>block</u></p>\n<hr>\n\n\n\n##INST_3E####CODE_3####HTML##<div id='box1'></div>\n<div id='box2'></div>\n\n<img id='img1' src='http://bsdacademysandbox.com/curriculum/wp-content/uploads/2017/06/green-dino.png'>\n<img id='img2' src='http://bsdacademysandbox.com/curriculum/wp-content/uploads/2017/06/mushroom.jpg'>##HTML_E####CSS###box1 {\n    width: 150px; height: 200px;\n    background: skyblue;\n}\n\n#box2 {\n    width: 100px; height: 120px;\n    background: crimson;\n}\n\n#img1 {\n    border: solid 2px skyblue;\n}\n\n#img2 {\n    border: solid 2px crimson;\n}\n\nimg {\n    display: block;     /* DISPLAY */\n}##CSS_E####JS####JS_E####CODE_3E####TEST_3####TEST_3E####STEP_3E####STEP_4####INST_4##Summary\n\nThat's it.\n\nBlock and in-line block each have their uses, and now you know how to make something behave like a block element.\n\nIf you haven't already, take a look at the <b>inline-block</b> sprint as well.##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_4E####TEST_4####TEST_4E####STEP_4E##