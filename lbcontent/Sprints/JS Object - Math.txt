6##STEP_1####INST_1##Overview%0A%0AThe%20ability%20to%20do%20Maths%20with%20code%20is%20very%20important,%20many%20many%20programs%20will%20not%20be%20possible%20to%20build%20without%20it.%0A---%0AIn%20this%20sprint,%20you%20will%20learn%20some%20of%20the%20many%20methods%20for%20the%20%5B%7BMath%7D%5D%20object%20in%20JavaScript%20and%20what%20you%20can%20do%20with%20them.##INST_1E####CODE_1####HTML##%3C!DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%09%3Clink%20rel=%22stylesheet%22%20type=%22text/css%22%20href=%22style.css%22/%3E%0A%09%3Cscript%20type=%22text/javascript%22%20src=%22script.js%22%3E%3C/script%3E%0A%3C/head%3E%0A%3Cbody%3E%0A%09%0A%3C/body%3E%0A%3C/html%3E#BEGIN_EDITABLE##END_EDITABLE###HTML_E####CSS####CSS_E####JS####JS_E####CODE_1E####LOGIC_1####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_1E####STEP_1E####STEP_2####INST_2##The%20syntax%0A%0ATo%20use%20the%20%5B%7BMath%7D%5D%20object%20and%20its%20many%20methods,%20use%20the%20following%20syntax:%0A%0A(js)Math.methodName(value);(#)%0A%5B-%0A%09(*)%5B%7BmethodName%7D%5D%20is%20name%20of%20the%20Maths%20operation%20you%20will%20perform%0A%09(*)%5B%7Bvalue%7D%5D%20is%20a%20number%20value,%20integer%20or%20float,%20on%20which%20the%20chosen%20operation%20will%20be%20performed%0A%09(*)The%20%5B%7Bvalue%7D%5D%20can%20be%20a%20//literal%20value//%20(%20e.g.%2023%20),%20a%20//variable//%20(%20e.g.%20numberFive%20)%20or%20the%20result%20of%20an%20//expression//%20(%20e.g.%2023%20+%20numberFive%20).%0A-%5D%0ALet's%20try%20out%20each%20of%20the%20method,%20starting%20with%20//round//,%20which%20will%20//round%20any%20float%20number%20into%20an%20integer//.%20%0A%0A(***)%0A(!)js#round#%20Use%20the%20%5B%7BMath%7D%5D%20object%20and%20the%20%5B%7Bround%7D%5D%20method%20to%20turn%20//2.33//%20into%20an%20integer.##INST_2E####CODE_2####HTML####HTML_E####CSS####CSS_E####JS##var%20integer%20=%20#BEGIN_EDITABLE#%20%20%20%20%20#END_EDITABLE#;%20%20%20%20%20%20//%20round%20a%20number%0A%0Aconsole.log(integer);##JS_E####CODE_2E####LOGIC_2####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_2E####STEP_2E####STEP_3####INST_3##Method:%20ceil%20&%20floor%0A%0ASimilar%20to%20the%20%5B%7Bround%7D%5D%20method,%20you%20can%20also%20use%20%5B%7BMath.ceil()%7D%5D%20to%20round%20a%20number%20value%20//up//%20or%20%5B%7BMath.floor()%7D%5D%20to%20round%20a%20number%20value%20//down//.%0A---%0AFor%20example:%0A%5B-%0A%09(*)%5B%7BMath.ceil(3.14)%7D%5D%20will%20return%20//4//%0A%09(*)%5B%7BMath.floor(3.14)%7D%5D%20will%20return%20//3//%0A-%5D%0A%0ALet's%20do%20some%20hands-on.%0A%0A(***)%0A(!)js#round%20down#%20Round%20%5B%7BvarOne%7D%5D%20//down//%20and%20print%20the%20result%20to%20console%0A(!)js#round%20up#%20Round%20%5B%7BvarTwo%7D%5D%20//up//%20and%20print%20the%20result%20to%20console##INST_3E####CODE_3####HTML####HTML_E####CSS####CSS_E####JS##var%20varOne%20=%201.99;%0Avar%20varTwo%20=%205.01;%0A%0A#BEGIN_EDITABLE#%20console.log(varOne);%20#END_EDITABLE#%20%20%20%20%20%20%20%20//%20round%20down%0A%0A#BEGIN_EDITABLE#%20console.log(varTwo);%20#END_EDITABLE#%20%20%20%20%20%20%20%20//%20round%20up##JS_E####CODE_3E####LOGIC_3####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_3E####STEP_3E####STEP_4####INST_4##Method:%20abs%0A%0AMoving%20on%20to%20the%20//absolute//%20method.%20This%20one%20will%20take%20any%20number%20and%20return%20its%20//absolute%20value//.%20Here%20is%20the%20syntax:%0A%0A(js)Math.abs(value);(#)%0A%5B-%0A%09(*)This%20method%20will%20work%20with%20any%20value%20(%20integer%20or%20float%20)%0A%09(*)But%20its%20effect%20is%20only%20obvious%20when%20the%20input%20value%20is%20//negative//,%20e.g%20%5B%7BMath.abs(-3.14)%7D%5D%20will%20give%20you%20//3.14//%0A-%5D%0A(***)%0A(!)js#absolute%20value#%20Make%20new%20variable%20%5B%7BpositiveNumber%7D%5D%20equal%20to%20the%20//absolute%20value//%20of%20%5B%7BnegativeNumber%7D%5D##INST_4E####CODE_4####HTML####HTML_E####CSS####CSS_E####JS##var%20negativeNumber%20=%20-6.5;%0A%0A#BEGIN_EDITABLE#%20var%20positiveNumber%20=%20negativeNumber;%20#END_EDITABLE#%20%20%20%20%20%20%20%20//%20absolute%20value##JS_E####CODE_4E####LOGIC_4####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_4E####STEP_4E####STEP_5####INST_5##Method:%20pow%20&%20sqrt%0A%0AThe%20last%20two%20methods%20are%20to%20do%20with%20the%20//power//%20and%20//root//%20of%20numbers.%20%0A%0A(js)Math.pow(value,%20exponent);(#)%0A%5B-%0A%09(*)%5B%7Bvalue%7D%5D%20can%20be%20any%20literal%20value,%20variable%20or%20expression%20with%20a%20return%20value%20that%20is%20a%20number.%0A%09(*)%5B%7Bexponent%7D%5D%20is%20the%20number%20of%20times%20to%20multiply%20the%20%5B%7Bvalue%7D%5D,%20e.g.%20%5B%7BMath.pow(4,%203)%7D%5D%20is%20the%20same%20as%20//4%20x%204%20x%204//,%20also%20//4%20to%20the%20power%20of%203//%0A-%5D%0A(js)Math.sqrt(value);(#)%0A%5B-%0A%09(*)%5B%7Bsqrt%7D%5D%20stands%20for%20//square%20root//%0A%09(*)%5B%7BMath.sqrt(9)%7D%5D%20equals%203%20because%203%20x%203%20=%209%0A-%5D%0A(***)%0A(!)js#power#%20Calculate%20//5%20to%20the%20power%20of%204//%20and%20log%20the%20result%20to%20console%0A(!)js#root#%20Calculate%20the%20//square%20root%20of%2025//%20and%20log%20the%20result%20to%20console##INST_5E####CODE_5####HTML####HTML_E####CSS####CSS_E####JS###BEGIN_EDITABLE#%20console.log();%20#END_EDITABLE#%20%20%20%20%20%20//%204th%20power%0A%0A#BEGIN_EDITABLE#%20console.log();%20#END_EDITABLE#%20%20%20%20%20%20//%20square%20root##JS_E####CODE_5E####LOGIC_5####HTML####HTML_E####CSS####CSS_E####JS##//%20use%20new%20content##JS_E####LOGIC_5E####STEP_5E####STEP_6####INST_6##Summary%0A%0AWell%20done!%0A---%0AApply%20what%20you%20learned%20here%20in%20your%20own%20projects.##INST_6E####CODE_6####HTML####HTML_E####CSS####CSS_E####JS####JS_E####CODE_6E####LOGIC_6####HTML####HTML_E####CSS####CSS_E####JS####JS_E####LOGIC_6E####STEP_6E##